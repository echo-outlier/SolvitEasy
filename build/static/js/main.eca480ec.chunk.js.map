{"version":3,"sources":["firebase-config.tsx","components/navbar/styles.tsx","store/reducers/auth.tsx","components/navbar/navbar.tsx","components/percentage/percentage.tsx","store/reducers/question.tsx","components/home/styles.tsx","components/home/searchbar.tsx","components/navbar/topbar/styles.tsx","components/navbar/topbar/topbar.tsx","components/home/home.tsx","components/questions/styles.tsx","components/questions/newques.tsx","components/login/login.tsx","components/answers/searchbar.tsx","components/answers/styles.tsx","components/answers/answers.tsx","routes.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","NavbarContainer","styled","div","NavbarItem","authSlice","createSlice","name","initialState","idtoken","userId","profile","email","photo","loading","reducers","Login","state","action","window","location","replace","payload","displayName","photoURL","token","userid","Logout","localStorage","removeItem","SetLoading","Authenticate","flag","dispatch","a","auth","signInWithPopup","GoogleAuthProvider","then","res","user","providerData","credential","idToken","uid","catch","error","signOut","console","log","actions","Navbar","useHistory","useDispatch","useSelector","onClick","calcPercent","number","percentage","parseFloat","toFixed","find_percentage","questions","map","question","single_ques","b","c","d","answers","Object","keys","saved","total","questionSlice","input","options","ChangeInput","type","value","CleanInput","OptionError","alert","Fetchquestions","temp","id","index","push","TickQuestion","getState","checked_opt","database","ref","child","val","once","snapshot","opt","update","PrimaryColor","Flex","QuestionContainer","Question","Options","props","checked","SaveButton","ClearButton","Div","Search","AllQuestionSearchbar","placeholder","onChange","e","setinput","target","MainContainer","InfoContainer","Info","Container","Topbar","to","className","useStyles","makeStyles","theme","backdrop","color","savebutton","fontWeight","backgroundColor","Home","useState","search","setsearch","filtered_questions","set_filtered_questions","setpercentage","classes","history","ques","setInput","useEffect","items","document","querySelectorAll","i","length","pathname","slice","dataset","classList","add","remove","on","questionid","quesRef","CreateUserField","sar","toLowerCase","yash_temp","filter","includes","ques_per","perc","Fragment","Backdrop","open","CircularProgress","count","copy","option","saved_opt","ans_options","SaveAnswer","quesRef1","ClearAnswer","ChangeInputHandler","Button","SaveQues_Num","QuesContainer","disable","Newques","setdisable","prevstate","InputChangeHandler","toUpperCase","Math","random","root","width","height","display","justifyContent","alignItems","bullet","margin","transform","title","fontSize","pos","marginBottom","button","spacing","zIndex","drawer","opacity","Card","variant","endIcon","AllAnswerSearchbar","OptionTop","Answers","newques","final_ques","ques_num","Routes","exact","path","component","Addques","App","onAuthStateChanged","persistConfig","key","storage","rootReducer","combineReducers","authReducer","quesReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.eca480ec.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDgxH6AZ3ZC3qSeXdB7EILA96koRBtTBMU\",\n  authDomain: \"thecheat-007.firebaseapp.com\",\n  databaseURL: \"https://thecheat-007-default-rtdb.firebaseio.com\",\n  projectId: \"thecheat-007\",\n  storageBucket: \"thecheat-007.appspot.com\",\n  messagingSenderId: \"30742964610\",\n  appId: \"1:30742964610:web:aabb71a13177b8a39e479b\",\n  measurementId: \"G-FKTEPQCQZQ\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\nexport const NavbarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 56px;\n  width: 100%;\n  background-color: ${PrimaryColor};\n`;\nexport const NavbarItem = styled.div`\n  margin: 5px;\n  color: white;\n  font-size: 20px;\n  background-color: ${SecendoryColor};\n  padding: 5px;\n  margin-right: 10px;\n  border-radius: 5px;\n  &:hover {\n    background-color: ${hoverColor};\n    cursor: pointer;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\nimport { setConstantValue } from \"typescript\";\nimport { stat } from \"fs\";\ninterface Props {\n  idtoken: any;\n  userId: any;\n  profile: any;\n  loading: boolean;\n}\n\nconst initialState: Props = {\n  idtoken: null,\n  userId: null,\n  profile: {\n    name: null,\n    email: null,\n    photo: null,\n  },\n  loading: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    Login: (state, action) => {\n      window.location.replace(\"/home\");\n      state.profile.name = action.payload.profile[0].displayName;\n      state.profile.email = action.payload.profile[0].email;\n      state.profile.photo = action.payload.profile[0].photoURL;\n      state.idtoken = action.payload.token;\n      state.userId = action.payload.userid;\n    },\n    Logout: (state) => {\n      localStorage.removeItem(\"persist:root\");\n      state.profile.name = null;\n      state.profile.email = null;\n      state.profile.photo = null;\n      state.idtoken = null;\n      state.userId = null;\n      window.location.replace(\"/\");\n    },\n    SetLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n});\n\nexport const Authenticate = (flag: boolean): AppThunk => {\n  return async (dispatch) => {\n    if (flag) {\n      // dispatch(SetLoading(true));\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n        .then((res: any) => {\n          if (res.user) {\n            dispatch(\n              Login({\n                profile: res.user.providerData,\n                token: res.credential.idToken,\n                userid: res.user.uid,\n              })\n            );\n          }\n        })\n        .catch((error) => {\n          // dispatch(SetLoading(false));\n        });\n    } else {\n      firebase\n        .auth()\n        .signOut()\n        .then((res) => {\n          dispatch(Logout());\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n};\n\nexport const { Login, Logout, SetLoading } = authSlice.actions;\nexport default authSlice.reducer;\n","import React from \"react\";\nimport { NavbarContainer, NavbarItem } from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Authenticate } from \"../../store/reducers/auth\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router\";\nconst Navbar = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [token, name, email, photo]: any = useSelector((state: RootState) => {\n    return [\n      state.auth.idtoken,\n      state.auth.profile.name,\n      state.auth.profile.email,\n      state.auth.profile.photo,\n    ];\n  });\n  const home = () => {\n    history.push(\"/home\");\n  };\n  const ans = () => {\n    history.push(\"/answers\");\n  };\n  const ques = () => {\n    history.push(\"/addques\");\n  };\n  return (\n    // <OuterNavContainer>\n    <NavbarContainer>\n      <NavbarItem onClick={() => dispatch(Authenticate(false))}>\n        Logout\n      </NavbarItem>\n    </NavbarContainer>\n    // </OuterNavContainer>\n  );\n};\n\nexport default Navbar;\n","const calcPercent = (number: any, percentage: any) => {\n  const result = number / percentage;\n  return parseFloat(result.toFixed(2));\n};\n\nexport const find_percentage = (questions: any) => {\n  let all_ques = [...questions];\n\n  var newques = all_ques.map((question: any) => {\n    let single_ques: any = { ...question };\n    let a: number = 0;\n    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    const answers = { ...question.answers };\n    Object.keys(answers).map((user: any) => {\n      if (answers[user].saved.a === true) a = a + 1;\n      if (answers[user].saved.b === true) b = b + 1;\n      if (answers[user].saved.c === true) c = c + 1;\n      if (answers[user].saved.d === true) d = d + 1;\n    });\n    const total = a + b + c + d;\n    if (total === 0) {\n      let percentage = {\n        ...single_ques.percentage,\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n      };\n      single_ques.percentage = percentage;\n    } else {\n      let percentage = {\n        ...single_ques.percentage,\n        a: calcPercent(a, total) * 100,\n        b: calcPercent(b, total) * 100,\n        c: calcPercent(c, total) * 100,\n        d: calcPercent(d, total) * 100,\n      };\n      single_ques.percentage = percentage;\n    }\n    return single_ques;\n  });\n  return newques;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\nimport { find_percentage } from \"../../components/percentage/percentage\";\n\ninterface Props {\n  questions: any;\n  input: any;\n}\n\nconst initialState: Props = {\n  questions: [],\n  input: {\n    question: \"\",\n    options: {\n      a: \"\",\n      b: \"\",\n      c: \"\",\n      d: \"\",\n    },\n  },\n};\n\nconst questionSlice = createSlice({\n  name: \"questions\",\n  initialState,\n  reducers: {\n    ChangeInput: (state, action) => {\n      if (action.payload.type === \"question\") {\n        state.input.question = action.payload.value;\n      } else {\n        state.input.options[`${action.payload.type}`] = action.payload.value;\n      }\n    },\n    CleanInput: (state) => {\n      state.input.question = \"\";\n      state.input.options = {\n        a: \"\",\n        b: \"\",\n        c: \"\",\n        d: \"\",\n      };\n    },\n    OptionError: (state) => {\n      alert(\"Fill All Options\");\n    },\n    Fetchquestions: (state, action) => {\n      const temp: any = [];\n      if (action.payload) {\n        Object.keys(action.payload).map((id, index) => {\n          temp.push(action.payload[id]);\n          temp[index].id = id;\n        });\n        state.questions = temp;\n      } else {\n        state.questions = [];\n      }\n    },\n  },\n});\n\nexport const CreateUserField = (questionid: any, userId: any): AppThunk => {\n  return (dispatch) => {\n    const quesRef = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(questionid)\n      .child(\"answers\");\n    quesRef.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      quesRef.update({\n        ...val,\n        [userId]: {\n          checked: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n          saved: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n        },\n      });\n    });\n  };\n};\n\nexport const TickQuestion = (payload: any): AppThunk => {\n  return (dispatch, getState) => {\n    const checked_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(payload.id)\n      .child(\"answers\")\n      .child(payload.userId)\n      .child(\"checked\");\n    let val: any = null;\n    checked_opt.once(\"value\", (snapshot) => {\n      val = snapshot.val();\n      Object.keys(val).map((opt) => {\n        if (opt === payload.type) {\n          val[opt] = true;\n        } else {\n          val[opt] = false;\n        }\n      });\n      checked_opt.update({\n        ...val,\n      });\n    });\n  };\n};\n\nexport const Addquestion = (): AppThunk => {\n  return (dispatch, getState) => {\n    const input = getState().ques.input;\n\n    const ques = {\n      id: Math.random(),\n      count: Object.keys(getState().ques.questions).length + 1,\n      question: input.question,\n      option: {\n        a: { value: input.options.a },\n        b: { value: input.options.b },\n        c: { value: input.options.c },\n        d: { value: input.options.d },\n      },\n      percentage: {\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n      },\n      answers: {\n        [getState().auth.userId]: {\n          checked: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n          saved: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n        },\n      },\n    };\n    if (\n      input.options.a != \"\" &&\n      input.options.b != \"\" &&\n      input.options.c != \"\" &&\n      input.options.d != \"\"\n    ) {\n      const quesRef = firebase.database().ref(\"Questions\");\n      quesRef.push(ques);\n      dispatch(CleanInput());\n    } else {\n      dispatch(OptionError());\n    }\n  };\n};\n\nexport const FetchQuestions = (): AppThunk => {\n  return (dispatch) => {\n    const quesRef = firebase.database().ref(\"Questions\");\n    quesRef.on(\"value\", (snapshot) => {\n      const ques = snapshot.val();\n      dispatch(Fetchquestions(ques));\n    });\n  };\n};\n\nexport const ClearAnswer = (questions: any, id: any, userId: any) => {\n  return (dispatch: any, getState: any) => {\n    const quesRef = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n    const quesRef1 = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId);\n    let val: any = null;\n    quesRef1.once(\"value\", (snapshot) => {\n      val = snapshot.val();\n      const options = {\n        a: false,\n        b: false,\n        c: false,\n        d: false,\n      };\n      quesRef.update({\n        ...options,\n      });\n      quesRef1.update({\n        ...options,\n      });\n    });\n\n    const all_ques = find_percentage(getState().ques.questions);\n    const ques: any = all_ques.filter((question) => {\n      if (question.id === id) {\n        return question;\n      }\n    });\n\n    const perc = { ...ques[0].percentage };\n\n    const ques_percentage = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"percentage\");\n    ques_percentage.update({\n      ...perc,\n    });\n  };\n};\n\nexport const SaveAnswer = (questions: any, id: any, userId: any): AppThunk => {\n  return (dispatch, getState) => {\n    let opt: any = null;\n\n    const checked_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"checked\");\n    const saved_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n\n    checked_opt.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      Object.keys(val).map((option) => {\n        if (val[option]) {\n          opt = option;\n        }\n      });\n      const ans_options = {\n        a: \"a\" === opt,\n        b: \"b\" === opt,\n        c: \"c\" === opt,\n        d: \"d\" === opt,\n      };\n      saved_opt.update({\n        ...ans_options,\n      });\n      checked_opt.update({\n        ...ans_options,\n        a: false,\n        b: false,\n        c: false,\n        d: false,\n      });\n    });\n\n    const all_ques = find_percentage(getState().ques.questions);\n    const ques: any = all_ques.filter((question) => {\n      if (question.id === id) {\n        return question;\n      }\n    });\n\n    const perc = { ...ques[0].percentage };\n\n    const ques_percentage = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"percentage\");\n    ques_percentage.update({\n      ...perc,\n    });\n  };\n};\n\nexport const SaveQues_Num = (id: any, userId: any, number: any): AppThunk => {\n  return (dispatch) => {\n    const ques_num = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"ques_num\");\n    ques_num.update({\n      number,\n    });\n  };\n};\n\nexport const { Fetchquestions, ChangeInput, CleanInput, OptionError } =\n  questionSlice.actions;\nexport default questionSlice.reducer;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\ninterface options {\n  checked: any;\n  saved: any;\n}\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  div {\n    .copy-btn {\n      font-size: 50px;\n      padding: 10px;\n      &:hover {\n        cursor: pointer;\n        background-color: #c6c6c6;\n        border-radius: 50%;\n      }\n    }\n  }\n`;\n\nexport const QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 20px auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 100px;\n  background-color: white;\n`;\n\nexport const Question = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 20px;\n  width: 100%;\n  span {\n    position: relative;\n    width: 50px;\n    height: 50px;\n    /* display: inline-block; */\n    .tick {\n      font-size: 25px;\n      /* margin-left: 10px; */\n      fill: green;\n    }\n    .cross {\n      /* margin-left: 10px; */\n      font-size:15px;\n      fill: red;\n    }\n  }\n`;\n\nexport const Options = styled.div<options>`\n  margin-top: 10px;\n  font-size: 17px;\n  padding: 10px 5px;\n  background-color: ${(props) => {\n    if (props.saved == true) {\n      return \"#1cd39c\";\n    } else if (props.checked == true) {\n      return \"#d0eef4;\";\n    } else {\n      return \"#eee\";\n    }\n  }};\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const AddButton = styled.div`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  height: 40px;\n  width: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${PrimaryColor};\n  color: white;\n  font-size: 20px;\n  border-radius: 50%;\n  &:hover {\n    background-color: #294580;\n    cursor: pointer;\n  }\n`;\n\nexport const SaveButton = styled.div`\n  margin-top: 20px;\n  padding: 10px;\n  padding-left: 11px;\n  background-color: ${PrimaryColor};\n  color: white;\n  border-radius: 5px;\n  &:hover {\n    background-color: #485a82;\n    cursor: pointer;\n  }\n`;\n\nexport const ClearButton = styled(SaveButton)``;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #input {\n    margin-top: 20px;\n    div {\n      background-color: #97b3ee;\n      padding: 10px;\n      margin-right: 10px;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 15px;\n    input {\n      font-size: 15px;\n      height: 30px;\n      width: 30px;\n      border: none;\n      outline: none;\n      padding: 2px;\n      border: 1px solid grey;\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllQuestionSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Search\n        type=\"text\"\n        placeholder=\"Search Your Question\"\n        value={props.input}\n        onChange={(e) => props.setinput(e.target.value)}\n      ></Search>\n    </div>\n  );\n};\n\nexport default AllQuestionSearchbar;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n  width: 80%;\n  margin: auto;\n  margin-top: 40px;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Info = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-right:5px;\n    width: 13px;\n    height: 13px;\n    background-color: #1cd39c;\n  }\n  #selected {\n    background-color: #d0eef4;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  a {\n    text-decoration: none;\n  }\n  div {\n    background-color: #3f5e8c;\n    color: white;\n    font-weight: bold;\n    padding: 10px;\n    border-radius: 5px;\n    &:hover {\n      background-color: ${hoverColor};\n      cursor: pointer;\n    }\n  }\n  .active {\n    background-color: ${PrimaryColor};\n  }\n`;\n","import React from \"react\";\nimport { Container, MainContainer, InfoContainer, Info } from \"./styles\";\nimport { Link } from \"react-router-dom\";\nimport { template } from \"@babel/core\";\nimport { useEffect } from \"react\";\nconst Topbar = () => {\n  return (\n    <MainContainer>\n      <Container>\n        <Link to=\"/home\">\n          <div data-name=\"home\" className=\"item active\">\n            All Question\n          </div>\n        </Link>\n        <Link to=\"/answers\">\n          <div data-name=\"answers\" className=\"item\">\n            All Answers\n          </div>\n        </Link>\n        <Link to=\"/addques\">\n          <div data-name=\"addques\" className=\"item\">\n            Add Question\n          </div>\n        </Link>\n      </Container>\n      <InfoContainer>\n        <Info>\n          <span id=\"selected\"></span> Selected Option\n        </Info>\n        <Info>\n          <span></span> Ticked Option\n        </Info>\n      </InfoContainer>\n    </MainContainer>\n  );\n};\n\nexport default Topbar;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport Navbar from \"../navbar/navbar\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  TickQuestion,\n  SaveAnswer,\n  ClearAnswer,\n  FetchQuestions,\n  CreateUserField,\n  SaveQues_Num,\n} from \"../../store/reducers/question\";\nimport { SetLoading } from \"../../store/reducers/auth\";\nimport {\n  Options,\n  Question,\n  QuestionContainer,\n  SaveButton,\n  Div,\n  ClearButton,\n  Flex,\n} from \"./styles\";\nimport Searchbar from \"./searchbar\";\nimport copy from \"copy-to-clipboard\";\nimport { AiFillCopy } from \"react-icons/ai\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { TiTick } from \"react-icons/ti\";\nimport { ImCross } from \"react-icons/im\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    color: \"#fff\",\n  },\n  savebutton: {\n    fontWeight: \"bold\",\n    backgroundColor: \"#97b3ee\",\n    \"&:hover\": {\n      backgroundColor: \"#bacbf0\",\n    },\n  },\n}));\n\nconst Home = () => {\n  const [search, setsearch] = useState(\"\");\n\n  const [filtered_questions, set_filtered_questions] = useState([]);\n  const [percentage, setpercentage]: any = useState(null);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [token, questions, userId, loading] = useSelector(\n    (state: RootState) => {\n      return [\n        state.auth.idtoken,\n        state.ques.questions,\n        state.auth.userId,\n        state.auth.loading,\n      ];\n    }\n  );\n\n  const [input, setInput]: any = useState(\n    Object.keys(questions).map((ques: any) => {\n      return { [ques.id]: \"\" };\n    })\n  );\n\n  const CopyQuestion = (ques: any) => {\n    copy(ques);\n  };\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname.slice(1, location.pathname.length);\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    dispatch(FetchQuestions());\n  }, []);\n\n  useEffect(() => {\n    if (questions) {\n      const temp = questions;\n      temp.map((question: any) => {\n        const answers = question.answers;\n        if (userId in answers) {\n        } else {\n          dispatch(CreateUserField(question.id, userId));\n        }\n      });\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    const ques: any = [];\n    var sar = search.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n      }\n    });\n    set_filtered_questions(ques);\n  }, [search, questions]);\n\n  useEffect(() => {\n    const ques_per = questions.map((ques: any) => {\n      const perc = { ...ques.percentage };\n      if (perc.a == 0 && perc.b == 0 && perc.c == 0 && perc.d == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setpercentage(ques_per);\n  }, [questions]);\n\n  const ChangeInputHandler = (e: any, question: any) => {\n    setInput({\n      [question.id]: e.target.value,\n    });\n  };\n\n  if (loading) {\n    return (\n      <React.Fragment>\n        <Backdrop className={classes.backdrop} open={true}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Searchbar input={search} setinput={setsearch} />\n      <QuestionContainer>\n        {filtered_questions.map((question: any) => {\n          return (\n            <React.Fragment key={question.id}>\n              <Flex>\n                <Question>\n                  <b>Ques {question?.count}:</b> {question.question}{\" \"}\n                  <span>\n                    {percentage[question.count - 1] ? (\n                      <TiTick className=\"tick\" />\n                    ) : (\n                      <ImCross className=\"cross\" />\n                    )}\n                  </span>\n                </Question>\n                <div>\n                  <AiFillCopy\n                    className=\"copy-btn\"\n                    onClick={() => CopyQuestion(question.question)}\n                  />\n                </div>\n              </Flex>\n              <Options\n                checked={question.answers[userId]?.checked.a}\n                saved={question.answers[userId]?.saved.a}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"a\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>A:</b> {question.option.a.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.b}\n                saved={question.answers[userId]?.saved.b}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"b\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>B:</b> {question.option.b.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.c}\n                saved={question.answers[userId]?.saved.c}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"c\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>C:</b> {question.option.c.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.d}\n                saved={question.answers[userId]?.saved.d}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"d\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>D:</b> {question.option.d.value}\n              </Options>\n              <Div>\n                <div>\n                  <SaveButton\n                    onClick={(e) =>\n                      dispatch(SaveAnswer(questions, question.id, userId))\n                    }\n                  >\n                    Save\n                  </SaveButton>\n                  <ClearButton\n                    onClick={() =>\n                      dispatch(ClearAnswer(questions, question.id, userId))\n                    }\n                  >\n                    Clear\n                  </ClearButton>\n                </div>\n\n                <div id=\"input\">\n                  <input\n                    type=\"text\"\n                    name={question.count}\n                    value={input[question.id]}\n                    onChange={(e) => ChangeInputHandler(e, question)}\n                    placeholder=\"NO..\"\n                  />\n                  <Button\n                    className={classes.savebutton}\n                    color=\"primary\"\n                    onClick={() =>\n                      dispatch(\n                        SaveQues_Num(question.id, userId, input[question.id])\n                      )\n                    }\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Div>\n            </React.Fragment>\n          );\n        })}\n      </QuestionContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#557EE6\";\ninterface Props {\n  disable: boolean;\n}\n\nexport const QuesContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  gap: 5px;\n  width: 80%;\n`;\n\nexport const Question = styled.div`\n  padding: 10px;\n  background-color: #fff;\n`;\nexport const Div = styled.div<Props>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  padding: 10px 15px;\n  color: white;\n  font-size: 20px;\n  width: 80px;\n  margin-bottom: 50px;\n  &:hover {\n    cursor: ${(props) => {\n      if (props.disable) {\n        return \"pointer\";\n      } else {\n        return \"disable\";\n      }\n    }};\n  }\n  background-color: ${(props) => {\n    if (props.disable) {\n      return \"#294580\";\n    } else {\n      return \"grey\";\n    }\n  }};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  textarea {\n    outline: none;\n    border: none;\n  }\n  #question {\n    margin-top: 20px;\n    width: 80%;\n    height: 250px;\n    font-size: 25px;\n    font-weight: bold;\n  }\n  #option {\n    width: 80%;\n    height: 70px;\n    font-size: 20px;\n    font-weight: 300;\n    word-wrap: break-word;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport { Container } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { ChangeInput, Addquestion } from \"../../store/reducers/question\";\nimport { Div } from \"./styles\";\nimport { Question, QuesContainer } from \"./styles\";\nimport styled from \"styled-components\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { useHistory } from \"react-router-dom\";\nconst Newques = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [questions, question, options, token] = useSelector(\n    (state: RootState) => {\n      return [\n        state.ques.questions,\n        state.ques.input.question,\n        state.ques.input.options,\n        state.auth.idtoken,\n      ];\n    }\n  );\n  const [disable, setdisable] = useState(false);\n  const [filtered_questions, set_filtered_questions] = useState([]);\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname.slice(1, location.pathname.length);\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const ques: any = [];\n    var sar = question.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n      }\n    });\n    if (ques.length === 0) {\n      setdisable((prevstate) => true);\n    } else setdisable((prevstate) => false);\n    set_filtered_questions(ques);\n  }, [question, questions]);\n  const InputChangeHandler = (e: any) => {\n    dispatch(ChangeInput({ type: e.target.name, value: e.target.value }));\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Container>\n        <textarea\n          name=\"question\"\n          placeholder=\"Type Your Question Here\"\n          id=\"question\"\n          value={question}\n          onChange={(e) => InputChangeHandler(e)}\n        />\n        <QuesContainer>\n          {filtered_questions.map((question: any) => {\n            return (\n              <React.Fragment key={question.id}>\n                <Question>\n                  <b>Ques {question?.count}:</b> {question.question}\n                </Question>\n              </React.Fragment>\n            );\n          })}\n        </QuesContainer>\n        {Object.keys(options).map((option) => {\n          return (\n            <textarea\n              key={option}\n              name={option}\n              placeholder={\"Option\" + option.toUpperCase()}\n              id=\"option\"\n              value={options[option]}\n              onChange={(e) => InputChangeHandler(e)}\n            />\n          );\n        })}\n        {disable ? (\n          <Div\n            disable={disable}\n            id=\"btn\"\n            onClick={() => dispatch(Addquestion())}\n          >\n            Save\n          </Div>\n        ) : (\n          <Div disable={disable} id=\"btn\">\n            Save\n          </Div>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Newques;\n","import React from \"react\";\nimport { Authenticate } from \"../../store/reducers/auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n    height: 300,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontWeight: \"bolder\",\n    color: \"white\",\n    backgroundColor: PrimaryColor,\n    \"&:hover\": {\n      backgroundColor: hoverColor,\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n    opacity: 0.5,\n  },\n}));\n\nconst Div = styled.div`\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -60%);\n`;\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [token, loading] = useSelector((state: RootState) => {\n    return [state.auth.idtoken, state.auth.loading];\n  });\n  const history = useHistory();\n  useEffect(() => {\n    if (token) {\n      history.push(\"/home\");\n    }\n  }, []);\n;\n\n  return (\n    <React.Fragment>\n      {/* {loading ? (\n        <Backdrop className={classes.backdrop} open={true}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      ) : ( */}\n      <Div>\n        <Card className={classes.root}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            endIcon={<FcGoogle>send</FcGoogle>}\n            onClick={() => dispatch(Authenticate(true))}\n          >\n            Login With Google\n          </Button>\n        </Card>\n      </Div>\n      {/* )} */}\n\n      {/* <NavbarContainer>\n        <NavbarItem onClick={() => dispatch(Authenticate(true))}>\n          Login\n        </NavbarItem>\n      </NavbarContainer> */}\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllAnswerSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n  return (\n    <Search\n      type=\"text\"\n      placeholder=\"Search Your Answer\"\n      value={props.input}\n      onChange={(e) => props.setInput(e.target.value)}\n    ></Search>\n  );\n};\n\nexport default AllAnswerSearchbar;\n","import styled from \"styled-components\";\nexport { QuestionContainer, Question } from \"../home/styles\";\n\ninterface Props {\n  val: any;\n}\n\nexport const Options = styled.div`\n  margin-top: 10px;\n  position: relative;\n  font-size: 17px;\n  background-color: #eee;\n  border-radius: 5px;\n`;\nexport const OptionTop = styled.div<Props>`\n  font-size: 12px;\n  margin-bottom: 5px;\n  height: 20px;\n  width: ${(props) => {\n    return `${props.val}%`;\n  }};\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: lightgreen;\n`;\n","import React from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { useEffect } from \"react\";\nimport Searchbar from \"./searchbar\";\nimport { useSelector } from \"react-redux\";\nimport { QuestionContainer, Options, Question, OptionTop } from \"./styles\";\nimport { RootState } from \"../../store/store\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { find_percentage } from \"../percentage/percentage\";\n\nconst calcPercent = (number: any, percentage: any) => {\n  const result = number / percentage;\n  return parseFloat(result.toFixed(2));\n};\n\nconst Answers = () => {\n  const [search, setsearch] = useState(\"\");\n  const [filtered_questions, set_filtered_questions]: any = useState([]);\n  const history = useHistory();\n  const [questions, userId] = useSelector((state: RootState) => {\n    return [state.ques.questions, state.auth.userId];\n  });\n\n  useEffect(() => {\n    if (!userId) {\n      history.push(\"/\");\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname.slice(1, location.pathname.length);\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    set_filtered_questions((prevstate: any) => {\n      let all_ques = [...questions];\n\n      var newques = find_percentage(questions);\n      var sar = search.toLowerCase();\n      const temp = newques.map((question: any) => {\n        let yash_temp: any = { ...question };\n        const hello = {\n          ...yash_temp,\n          question: yash_temp.question.toLowerCase(),\n        };\n        return hello;\n      });\n      const final_ques = temp.filter((question: any) => {\n        if (question.question.includes(sar)) {\n          return question;\n        }\n      });\n      return [...final_ques];\n    });\n  }, [search, questions]);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Searchbar input={search} setInput={setsearch} />\n      <QuestionContainer>\n        {filtered_questions.map((question: any) => {\n          return (\n            <React.Fragment key={question.id}>\n              <Question>\n                <b>\n                  Ques{\" \"}\n                  {question.answers[userId].ques_num\n                    ? question.answers[userId].ques_num.number\n                    : null}\n                  :\n                </b>{\" \"}\n                {question.question}\n              </Question>\n              <Options>\n                <OptionTop val={question.percentage.a}>\n                  {question.percentage.a != 0 ? question.percentage.a : null}\n                  {question.percentage.a != 0 ? \"%\" : null}\n                </OptionTop>\n                <b>A:</b> {question.option.a.value}\n              </Options>\n              <Options>\n                <OptionTop val={question.percentage.b}>\n                  {question.percentage.b != 0 ? question.percentage.b : null}\n                  {question.percentage.b != 0 ? \"%\" : null}\n                </OptionTop>\n                <b>B:</b> {question.option.b.value}\n              </Options>\n              <Options>\n                <OptionTop val={question.percentage.c}>\n                  {question.percentage.c != 0 ? question.percentage.c : null}\n                  {question.percentage.c != 0 ? \"%\" : null}\n                </OptionTop>\n                <b>C:</b> {question.option.c.value}\n              </Options>\n              <Options>\n                <OptionTop val={question.percentage.d}>\n                  {question.percentage.d != 0 ? question.percentage.d : null}\n                  {question.percentage.d != 0 ? \"%\" : null}\n                </OptionTop>\n                <b>D:</b> {question.option.d.value}\n              </Options>\n            </React.Fragment>\n          );\n        })}\n      </QuestionContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Answers;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/home/home\";\nimport Addques from \"./components/questions/newques\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"./store/store\";\nimport Login from \"./components/login/login\";\nimport Answers from \"./components/answers/answers\";\nconst Routes = () => {\n  const token: any = useSelector((state: RootState) => state.auth.idtoken);\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/home\" component={Home} />\n      <Route exact path=\"/addques\" component={Addques} />\n      <Route exact path=\"/answers\" component={Answers} />\n    </React.Fragment>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport firebase from \"./firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Routes from \"./routes\";\nimport { Logout } from \"./store/reducers/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        // console.log(\"profile\", user?.providerData[0].email);\n        const email = user?.providerData[0].email;\n      } else {\n        // console.log(\"no user\");\n      }\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Routes />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import authReducer from \"./reducers/auth\";\nimport quesReducer from \"./reducers/question\";\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ques: quesReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistor } from \"./store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"SolvitEasy\">\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}