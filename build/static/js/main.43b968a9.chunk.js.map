{"version":3,"sources":["firebase-config.tsx","components/home/styles.tsx","styles.tsx","store/reducers/auth.tsx","components/navbar/navbar.tsx","store/reducers/question.tsx","components/home/searchbar.tsx","components/home/home.tsx","components/questions/styles.tsx","components/questions/newques.tsx","components/login/login.tsx","components/answers/searchbar.tsx","components/answers/styles.tsx","components/answers/answers.tsx","routes.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","PrimaryColor","Flex","styled","div","QuestionContainer","Question","Options","props","saved","checked","AddButton","SaveButton","ClearButton","Div","NavbarContainer","NavbarItem","authSlice","createSlice","name","initialState","idtoken","userId","profile","email","photo","reducers","Login","state","action","console","log","payload","displayName","photoURL","token","userid","Logout","localStorage","removeItem","window","location","replace","Authenticate","flag","dispatch","a","auth","signInWithPopup","GoogleAuthProvider","then","res","user","providerData","credential","idToken","uid","catch","error","signOut","actions","Navbar","history","useHistory","useDispatch","useSelector","onClick","push","questionSlice","questions","input","question","options","b","c","d","ChangeInput","type","value","ChangeSearchInputAllQuestion","search_ques","ChangeSearchInputAllAnswer","search_ans","CleanInput","Fetchquestions","temp","Object","keys","map","id","index","AnswerSaved","AnswerNotSaved","TickQuestion","getState","checked_opt","database","ref","child","val","once","snapshot","opt","update","Search","AllQuestionSearchbar","placeholder","onChange","e","setinput","target","Home","ques","useState","search","setsearch","setInput","useEffect","on","answers","questionid","quesRef","CreateUserField","filtered_questions","set_filtered_questions","sar","toLowerCase","yash_temp","filter","includes","SaveAnswerHandler","saved_opt","option","ans_options","SaveAnswer","ClearAnswerHandler","ClearAnswer","Fragment","count","copy","to","QuesContainer","disable","Container","Newques","setdisable","length","prevstate","InputChangeHandler","AddquesHandler","Math","random","percentage","toUpperCase","AllAnswerSearchbar","OptionTop","calcPercent","number","parseFloat","toFixed","Answers","items","document","querySelectorAll","i","classList","toggle","newques","single_ques","total","final_ques","Routes","exact","path","component","Addques","App","onAuthStateChanged","persistConfig","key","storage","rootReducer","combineReducers","authReducer","quesReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.43b968a9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDgxH6AZ3ZC3qSeXdB7EILA96koRBtTBMU\",\n  authDomain: \"thecheat-007.firebaseapp.com\",\n  databaseURL: \"https://thecheat-007-default-rtdb.firebaseio.com\",\n  projectId: \"thecheat-007\",\n  storageBucket: \"thecheat-007.appspot.com\",\n  messagingSenderId: \"30742964610\",\n  appId: \"1:30742964610:web:aabb71a13177b8a39e479b\",\n  measurementId: \"G-FKTEPQCQZQ\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\ninterface options {\n  checked: any;\n  saved: any;\n}\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  div {\n    svg {\n      font-size: 30px;\n      /* fill: grey; */\n      padding: 10px;\n      &:hover {\n        cursor: pointer;\n        background-color: #c6c6c6;\n        border-radius: 50%;\n      }\n    }\n  }\n`;\n\nexport const QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 20px auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 100px;\n  background-color: white;\n`;\n\nexport const Question = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 20px;\n  width: 100%;\n`;\n\nexport const Options = styled.div<options>`\n  margin-top: 10px;\n  font-size: 17px;\n  padding: 10px 5px;\n  /* color: ${(props) => {\n    if (props.saved) {\n      return \"white\";\n    } else {\n      return \"black\";\n    }\n  }}; */\n  /* border: 2px solid black; */\n  background-color: ${(props) => {\n    // console.log(props.flag);\n    if (props.saved == true) {\n      return \"#1cd39c\";\n    } else if (props.checked == true) {\n      return \"#a6feb2\";\n    } else {\n      return \"#eee\";\n    }\n  }};\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const AddButton = styled.div`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  height: 40px;\n  width: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${PrimaryColor};\n  color: white;\n  font-size: 20px;\n  border-radius: 50%;\n  &:hover {\n    background-color: #294580;\n    cursor: pointer;\n  }\n`;\n\nexport const SaveButton = styled.div`\n  margin-top: 20px;\n  padding: 10px;\n  background-color: ${PrimaryColor};\n  color: white;\n  width: 40px;\n  border-radius: 5px;\n  &:hover {\n    background-color: #294580;\n    cursor: pointer;\n  }\n`;\n\nexport const ClearButton = styled(SaveButton)``;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #input {\n    margin-top: 20px;\n    div {\n      background-color: #97b3ee;\n      padding: 10px;\n      margin-right: 10px;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n  div {\n    /* margin-left: 10px; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 15px;\n    input {\n      font-size: 16px;\n      height: 30px;\n      width: 30px;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nexport const NavbarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 56px;\n  width: 100%;\n  background-color: ${PrimaryColor};\n`;\nexport const NavbarItem = styled.div`\n  margin: 5px;\n  color: white;\n  font-size: 20px;\n  background-color: ${SecendoryColor};\n  padding: 3px;\n  border-radius: 5px;\n  &:hover {\n    background-color: ${hoverColor};\n    cursor: pointer;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\nimport { setConstantValue } from \"typescript\";\ninterface Props {\n  idtoken: any;\n  userId: any;\n  profile: any;\n}\n\nconst initialState: Props = {\n  idtoken: null,\n  userId: null,\n  profile: {\n    name: null,\n    email: null,\n    photo: null,\n  },\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    Login: (state, action) => {\n      console.log(\"action\", action.payload);\n      console.log(action.payload.profile[0].displayName);\n      state.profile.name = action.payload.profile[0].displayName;\n      state.profile.email = action.payload.profile[0].email;\n      state.profile.photo = action.payload.profile[0].photoURL;\n      state.idtoken = action.payload.token;\n      state.userId = action.payload.userid;\n      //   state.email = action.payload.;\n    },\n    Logout: (state) => {\n      localStorage.removeItem(\"persist:root\");\n      console.log(\"dispatched\");\n      state.profile.name = null;\n      state.profile.email = null;\n      state.profile.photo = null;\n      state.idtoken = null;\n      state.userId = null;\n      window.location.replace(\"/\");\n    },\n  },\n});\n\nexport const Authenticate = (flag: boolean): AppThunk => {\n  return async (dispatch) => {\n    if (flag) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n        .then((res: any) => {\n          if (res.user) {\n            console.log(res);\n            dispatch(\n              Login({\n                profile: res.user.providerData,\n                token: res.credential.idToken,\n                userid: res.user.uid,\n              })\n            );\n          }\n        })\n        .catch((error) => console.log(error));\n    } else {\n      firebase\n        .auth()\n        .signOut()\n        .then((res) => {\n          dispatch(Logout());\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n};\n\nexport const { Login, Logout } = authSlice.actions;\nexport default authSlice.reducer;\n","import React from \"react\";\nimport { NavbarContainer, NavbarItem } from \"../../styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Authenticate } from \"../../store/reducers/auth\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router\";\nconst Navbar = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [token, name, email, photo]: any = useSelector((state: RootState) => {\n    return [\n      state.auth.idtoken,\n      state.auth.profile.name,\n      state.auth.profile.email,\n      state.auth.profile.photo,\n    ];\n  });\n  const home = () => {\n    history.push(\"/home\");\n  };\n  const ans = () => {\n    history.push(\"/answers\");\n  };\n  const ques = () => {\n    history.push(\"/addques\");\n  };\n  return (\n    <div>\n      <NavbarContainer>\n        <NavbarItem onClick={home}>Home</NavbarItem>\n        <NavbarItem onClick={ans}>Answers</NavbarItem>\n        <NavbarItem onClick={ques}>Add Ques</NavbarItem>\n        <NavbarItem onClick={() => dispatch(Authenticate(false))}>\n          Logout\n        </NavbarItem>\n      </NavbarContainer>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\n\ninterface Props {\n  questions: any;\n  input: any;\n}\n\nconst initialState: Props = {\n  questions: [],\n  input: {\n    question: \"\",\n    options: {\n      a: \"\",\n      b: \"\",\n      c: \"\",\n      d: \"\",\n    },\n  },\n};\n\nconst questionSlice = createSlice({\n  name: \"questions\",\n  initialState,\n  reducers: {\n    ChangeInput: (state, action) => {\n      if (action.payload.type === \"question\") {\n        state.input.question = action.payload.value;\n      } else {\n        state.input.options[`${action.payload.type}`] = action.payload.value;\n      }\n    },\n    ChangeSearchInputAllQuestion: (state, action) => {\n      state.input.search_ques = action.payload;\n    },\n    ChangeSearchInputAllAnswer: (state, action) => {\n      console.log(\"something\");\n      state.input.search_ans = action.payload;\n    },\n    CleanInput: (state) => {\n      state.input.question = \"\";\n      state.input.options = {\n        a: \"\",\n        b: \"\",\n        c: \"\",\n        d: \"\",\n      };\n    },\n    Fetchquestions: (state, action) => {\n      const temp: any = [];\n      if (action.payload) {\n        Object.keys(action.payload).map((id, index) => {\n          temp.push(action.payload[id]);\n          temp[index].id = id;\n        });\n        console.log(\"TEMP\", temp);\n        state.questions = temp;\n      } else {\n        state.questions = [];\n      }\n    },\n    AnswerSaved: (state) => {\n      console.log(\"Answer Saved\");\n    },\n    AnswerNotSaved: (state) => {\n      console.log(\"Answer not Saved\");\n    },\n  },\n});\n\nexport const CreateUserField = (questionid: any, userId: any): AppThunk => {\n  return (dispatch) => {\n    console.log(questionid);\n    const quesRef = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(questionid)\n      .child(\"answers\");\n    quesRef.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      quesRef.update({\n        ...val,\n        [userId]: {\n          checked: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n          saved: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n        },\n      });\n    });\n  };\n};\n\nexport const TickQuestion = (payload: any): AppThunk => {\n  return (dispatch, getState) => {\n    const checked_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(payload.id)\n      .child(\"answers\")\n      .child(payload.userId)\n      .child(\"checked\");\n    let val: any = null;\n    checked_opt.once(\"value\", (snapshot) => {\n      val = snapshot.val();\n      console.log(\"VA\", val);\n      Object.keys(val).map((opt) => {\n        if (opt === payload.type) {\n          val[opt] = true;\n        } else {\n          val[opt] = false;\n        }\n      });\n      console.log(\"VA\", val);\n      checked_opt.update({\n        ...val,\n      });\n    });\n  };\n};\n\nexport const Addquestion = (): AppThunk => {\n  return async (dispatch, getState) => {\n    try {\n      const input = getState().ques.input;\n      const ques = {\n        id: Math.random(),\n        count: Object.keys(getState().ques.questions).length + 1,\n        question: input.question,\n        option: {\n          a: { value: input.options.a },\n          b: { value: input.options.b },\n          c: { value: input.options.c },\n          d: { value: input.options.d },\n        },\n        percentage: {\n          a: 0,\n          b: 0,\n          c: 0,\n          d: 0,\n        },\n        answers: {\n          [getState().auth.userId]: {\n            checked: {\n              a: false,\n              b: false,\n              c: false,\n              d: false,\n            },\n            saved: {\n              a: false,\n              b: false,\n              c: false,\n              d: false,\n            },\n          },\n        },\n      };\n      const quesRef = firebase.database().ref(\"Questions\");\n      quesRef.push(ques);\n      dispatch(CleanInput());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const FetchQuestions = (): AppThunk => {\n  return (dispatch) => {\n    const quesRef = firebase.database().ref(\"Questions\");\n    quesRef.on(\"value\", (snapshot) => {\n      const ques = snapshot.val();\n      dispatch(Fetchquestions(ques));\n    });\n  };\n};\n\nexport const ClearAnswer = (id: any, userId: any) => {\n  return (dispatch: any) => {\n    const quesRef = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n    let val: any = null;\n    quesRef.once(\"value\", (snapshot) => {\n      val = snapshot.val();\n      console.log(val);\n      const options = {\n        a: false,\n        b: false,\n        c: false,\n        d: false,\n      };\n      quesRef.update({\n        ...options,\n      });\n    });\n  };\n};\n\nexport const SaveAnswer = (id: any, userId: any): AppThunk => {\n  return (dispatch, getState) => {\n    let opt: any = null;\n\n    const checked_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"checked\");\n    const saved_opt = firebase\n      .database()\n      .ref(\"Questions\")\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n\n    checked_opt.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      Object.keys(val).map((option) => {\n        if (val[option]) {\n          opt = option;\n        }\n      });\n      const ans_options = {\n        a: \"a\" === opt,\n        b: \"b\" === opt,\n        c: \"c\" === opt,\n        d: \"d\" === opt,\n      };\n      saved_opt.update({\n        ...ans_options,\n      });\n      checked_opt.update({\n        a: false,\n        b: false,\n        c: false,\n        d: false,\n      });\n    });\n  };\n};\n\nexport const {\n  Fetchquestions,\n  ChangeInput,\n  ChangeSearchInputAllQuestion,\n  ChangeSearchInputAllAnswer,\n  CleanInput,\n} = questionSlice.actions;\nexport default questionSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ChangeSearchInputAllQuestion } from \"../../store/reducers/question\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllQuestionSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Search\n      type=\"text\"\n      placeholder=\"Search Your Question\"\n      value={props.input}\n      onChange={(e) => props.setinput(e.target.value)}\n    ></Search>\n  );\n};\n\nexport default AllQuestionSearchbar;\n","import React, { useEffect, useState } from \"react\";\nimport { AddButton } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../navbar/navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  TickQuestion,\n  SaveAnswer,\n  ClearAnswer,\n  FetchQuestions,\n  CreateUserField,\n} from \"../../store/reducers/question\";\nimport {\n  Options,\n  Question,\n  QuestionContainer,\n  SaveButton,\n  Div,\n  ClearButton,\n  Flex,\n} from \"./styles\";\nimport Searchbar from \"./searchbar\";\nimport copy from \"copy-to-clipboard\";\nimport { AiFillCopy } from \"react-icons/ai\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [token, questions, userId] = useSelector((state: RootState) => {\n    return [state.auth.idtoken, state.ques.questions, state.auth.userId];\n  });\n\n  const [search, setsearch] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    dispatch(FetchQuestions());\n  }, []);\n\n  const CopyQuestion = (ques: any) => {\n    console.log(\"copy\", ques);\n    copy(ques);\n  };\n\n  useEffect(() => {\n    if (questions) {\n      const temp = questions;\n      console.log(\"temp\", temp);\n      temp.map((question: any) => {\n        const answers = question.answers;\n        if (userId in answers) {\n          console.log(\"Answer is created\");\n        } else {\n          dispatch(CreateUserField(question.id, userId));\n          console.log(\"Answer is not created\");\n        }\n      });\n    }\n  }, [questions]);\n\n  const [filtered_questions, set_filtered_questions] = useState([]);\n  useEffect(() => {\n    const ques: any = [];\n    var sar = search.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n        console.log(\"Found\");\n      }\n    });\n    console.log(\"ques\", ques);\n    set_filtered_questions(ques);\n  }, [search, questions]);\n\n  const SaveAnswerHandler = (e: any, id: any) => {\n    console.log(e.target.name);\n    console.log(\"dispatching\");\n    dispatch(SaveAnswer(id, userId));\n  };\n  const ClearAnswerHandler = (id: any) => {\n    dispatch(ClearAnswer(id, userId));\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Searchbar input={search} setinput={setsearch} />\n      <QuestionContainer>\n        {filtered_questions.map((question: any) => {\n          return (\n            <React.Fragment key={question.id}>\n              <Flex>\n                <Question>\n                  <b>Ques {question?.count}:</b> {question.question}\n                </Question>\n                <div>\n                  <AiFillCopy onClick={() => CopyQuestion(question.question)} />\n                </div>\n              </Flex>\n              <Options\n                checked={question.answers[userId]?.checked.a}\n                saved={question.answers[userId]?.saved.a}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"a\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>A:</b> {question.option.a.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.b}\n                saved={question.answers[userId]?.saved.b}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"b\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>B:</b> {question.option.b.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.c}\n                saved={question.answers[userId]?.saved.c}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"c\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>C:</b> {question.option.c.value}\n              </Options>\n              <Options\n                checked={question.answers[userId]?.checked.d}\n                saved={question.answers[userId]?.saved.d}\n                onClick={() =>\n                  dispatch(\n                    TickQuestion({ type: \"d\", id: question.id, userId: userId })\n                  )\n                }\n              >\n                <b>D:</b> {question.option.d.value}\n              </Options>\n              <Div>\n                <div>\n                  <SaveButton\n                    onClick={(e) => SaveAnswerHandler(e, question.id)}\n                  >\n                    Save\n                  </SaveButton>\n                  <ClearButton onClick={() => ClearAnswerHandler(question.id)}>\n                    Clear\n                  </ClearButton>\n                </div>\n\n                <div id=\"input\">\n                  <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"NO..\"\n                  />\n                  <div>Save</div>\n                </div>\n              </Div>\n            </React.Fragment>\n          );\n        })}\n      </QuestionContainer>\n      <Link to=\"/addques\">\n        <AddButton>+</AddButton>\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#557EE6\";\ninterface Props {\n  disable: boolean;\n}\n\nexport const QuesContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  /* align-items: center; */\n  flex-direction: column;\n  gap: 5px;\n  width: 70%;\n`;\n\nexport const Question = styled.div`\n  padding: 10px;\n  background-color: #fff;\n`;\nexport const Div = styled.div<Props>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  padding: 10px 15px;\n  color: white;\n  font-size: 20px;\n  width: 80px;\n  margin-bottom: 50px;\n  &:hover {\n    cursor: ${(props) => {\n      console.log(props.disable);\n      if (props.disable) {\n        return \"pointer\";\n      } else {\n        return \"disable\";\n      }\n    }};\n  }\n  background-color: ${(props) => {\n    console.log(props.disable);\n    if (props.disable) {\n      return \"#294580\";\n    } else {\n      return \"grey\";\n    }\n  }};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  textarea {\n    outline: none;\n    border: none;\n  }\n  #question {\n    margin-top: 20px;\n    width: 70%;\n    height: 250px;\n    font-size: 25px;\n    font-weight: bold;\n    /* background-color: ${PrimaryColor}; */\n    /* color: white; */\n    /* text-align: center; */\n    word-wrap: break-word;\n  }\n  #option {\n    width: 70%;\n    height: 70px;\n    font-size: 20px;\n    font-weight: 300;\n    word-wrap: break-word;\n  }\n  #btn {\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport { Container } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { ChangeInput, Addquestion } from \"../../store/reducers/question\";\nimport { Div } from \"./styles\";\nimport { Question, QuesContainer } from \"./styles\";\nimport styled from \"styled-components\";\nconst Newques = () => {\n  const dispatch = useDispatch();\n  const [questions, question, options] = useSelector((state: RootState) => {\n    return [\n      state.ques.questions,\n      state.ques.input.question,\n      state.ques.input.options,\n    ];\n  });\n  const [disable, setdisable] = useState(false);\n  const [filtered_questions, set_filtered_questions] = useState([]);\n  useEffect(() => {\n    const ques: any = [];\n    var sar = question.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n        console.log(\"Found\");\n      }\n    });\n    if (ques.length === 0) {\n      setdisable((prevstate) => true);\n    } else setdisable((prevstate) => false);\n    set_filtered_questions(ques);\n  }, [question, questions]);\n  const InputChangeHandler = (e: any) => {\n    dispatch(ChangeInput({ type: e.target.name, value: e.target.value }));\n  };\n\n  const AddquesHandler = (e: any) => {\n    dispatch(Addquestion());\n  };\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Container>\n        <textarea\n          name=\"question\"\n          placeholder=\"Type Your Question Here\"\n          id=\"question\"\n          value={question}\n          onChange={(e) => InputChangeHandler(e)}\n        />\n        <QuesContainer>\n          {filtered_questions.map((question: any) => {\n            return (\n              <React.Fragment key={question.id}>\n                <Question>\n                  <b>Ques {question?.count}:</b> {question.question}\n                </Question>\n              </React.Fragment>\n            );\n          })}\n        </QuesContainer>\n        {Object.keys(options).map((option) => {\n          return (\n            <textarea\n              key={option}\n              name={option}\n              placeholder={\"Option\" + option.toUpperCase()}\n              id=\"option\"\n              value={options[option]}\n              onChange={(e) => InputChangeHandler(e)}\n            />\n          );\n        })}\n        {disable ? (\n          <Div disable={disable} id=\"btn\" onClick={(e) => AddquesHandler(e)}>\n            Save\n          </Div>\n        ) : (\n          <Div disable={disable} id=\"btn\">\n            Save\n          </Div>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Newques;\n","import React from \"react\";\nimport { NavbarContainer, NavbarItem } from \"../../styles\";\nimport { Authenticate } from \"../../store/reducers/auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state: RootState) => state.auth.idtoken);\n  const history = useHistory();\n  useEffect(() => {\n    if (token) {\n      history.push(\"/home\");\n    }\n  });\n  return (\n    <React.Fragment>\n      <NavbarContainer>\n        <NavbarItem onClick={() => dispatch(Authenticate(true))}>\n          Login\n        </NavbarItem>\n      </NavbarContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChangeSearchInputAllAnswer } from \"../../store/reducers/question\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllAnswerSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n  return (\n    <Search\n      type=\"text\"\n      placeholder=\"Search Your Answer\"\n      value={props.input}\n      onChange={(e) => props.setInput(e.target.value)}\n    ></Search>\n  );\n};\n\nexport default AllAnswerSearchbar;\n","import styled from \"styled-components\";\nexport { QuestionContainer, Question } from \"../home/styles\";\n\nexport const Options = styled.div`\n  margin-top: 10px;\n  position: relative;\n  font-size: 17px;\n  padding: 0px 5px;\n  /* border: 2px solid black; */\n  background-color: #eee;\n  border-radius: 5px;\n`;\nexport const OptionTop = styled.div`\n  font-size: 12px;\n  margin-bottom: 5px;\n  height: 20px;\n  width: 100%;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  background-color: lightgreen;\n`;\n","import React from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport Topbar from \"../home/topbar/topbar\";\nimport { useEffect } from \"react\";\nimport Searchbar from \"./searchbar\";\nimport { useSelector } from \"react-redux\";\nimport { QuestionContainer, Options, Question, OptionTop } from \"./styles\";\nimport { RootState } from \"../../store/store\";\nimport { useState } from \"react\";\n\nconst calcPercent = (number: any, percentage: any) => {\n  const result = number / percentage;\n  return parseFloat(result.toFixed(4));\n};\nconst Answers = () => {\n  useEffect(() => {\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      items[i].classList.toggle(\"active\");\n    }\n  }, []);\n  const [search, setsearch] = useState(\"\");\n  const [filtered_questions, set_filtered_questions]: any = useState([]);\n  const questions = useSelector((state: RootState) => {\n    return state.ques.questions;\n  });\n\n  useEffect(() => {\n    set_filtered_questions((prevstate: any) => {\n      let all_ques = [...questions];\n\n      var newques = all_ques.map((question: any) => {\n        let single_ques: any = { ...question };\n        let a: number = 0;\n        let b: number = 0;\n        let c: number = 0;\n        let d: number = 0;\n        const answers = { ...question.answers };\n        Object.keys(answers).map((user: any) => {\n          if (answers[user].saved.a === true) a = a + 1;\n          if (answers[user].saved.b === true) b = b + 1;\n          if (answers[user].saved.c === true) c = c + 1;\n          if (answers[user].saved.d === true) d = d + 1;\n        });\n        const total = a + b + c + d;\n        if (total === 0) {\n          let percentage = {\n            ...single_ques.percentage,\n            a: 0,\n            b: 0,\n            c: 0,\n            d: 0,\n          };\n          single_ques.percentage = percentage;\n        } else {\n          let percentage = {\n            ...single_ques.percentage,\n            a: calcPercent(a, total) * 100,\n            b: calcPercent(b, total) * 100,\n            c: calcPercent(c, total) * 100,\n            d: calcPercent(d, total) * 100,\n          };\n          single_ques.percentage = percentage;\n        }\n        return single_ques;\n      });\n      var sar = search.toLowerCase();\n      const temp = newques.map((question: any) => {\n        let yash_temp: any = { ...question };\n        const hello = {\n          ...yash_temp,\n          question: yash_temp.question.toLowerCase(),\n        };\n        return hello;\n      });\n      const final_ques = temp.filter((question: any) => {\n        if (question.question.includes(sar)) {\n          return question;\n          // ques.push(question);\n        }\n      });\n      return [...final_ques];\n    });\n  }, [search, questions]);\n\n  // useEffect(() => {\n  // console.log(\"inside useEffect\");\n\n  // let all_ques = [...questions];\n\n  // set_filtered_questions((prevstate: any) => {\n  // return [...prevstate, ...all_ques];\n  // });\n  // }, []);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Searchbar input={search} setInput={setsearch} />\n      <QuestionContainer>\n        {filtered_questions.map((question: any) => {\n          return (\n            <React.Fragment key={question.id}>\n              <Question>\n                <b>Ques:</b> {question.question}\n              </Question>\n              <Options>\n                <OptionTop>{question.percentage.a}%</OptionTop>\n                <b>A:</b> {question.option.a.value}\n              </Options>\n              <Options>\n                <OptionTop>{question.percentage.b}%</OptionTop>\n                <b>B:</b> {question.option.b.value}\n              </Options>\n              <Options>\n                <OptionTop>{question.percentage.c}%</OptionTop>\n                <b>C:</b> {question.option.c.value}\n              </Options>\n              <Options>\n                <OptionTop>{question.percentage.d}%</OptionTop>\n                <b>D:</b> {question.option.d.value}\n              </Options>\n            </React.Fragment>\n          );\n        })}\n      </QuestionContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Answers;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/home/home\";\nimport Addques from \"./components/questions/newques\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"./store/store\";\nimport Login from \"./components/login/login\";\nimport Answers from \"./components/answers/answers\";\nconst Routes = () => {\n  const token: any = useSelector((state: RootState) => state.auth.idtoken);\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/home\" component={Home} />\n      <Route exact path=\"/addques\" component={Addques} />\n      <Route exact path=\"/answers\" component={Answers} />\n    </React.Fragment>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport firebase from \"./firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Authenticate } from \"./store/reducers/auth\";\nimport { RootState } from \"./store/store\";\nimport Routes from \"./routes\";\nimport { Switch } from \"react-router-dom\";\n\nfunction App() {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        console.log(user.providerData);\n        console.log(uid);\n        console.log(\"user\");\n        // ...\n      } else {\n        console.log(\"no user\");\n      }\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Routes />\n\n      {/* <h2>{name}</h2>\n      <h2>{email}</h2>\n      <img src={photo} alt=\"\" /> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import authReducer from \"./reducers/auth\";\nimport quesReducer from \"./reducers/question\";\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ques: quesReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistor } from \"./store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}