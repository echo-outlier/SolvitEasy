{"version":3,"sources":["firebase-config.tsx","components/navbar/styles.tsx","store/reducers/auth.tsx","components/navbar/navbar.tsx","components/percentage/percentage.tsx","store/reducers/question.tsx","store/reducers/group.tsx","components/home/styles.tsx","components/home/searchbar.tsx","components/navbar/topbar/styles.tsx","components/navbar/topbar/topbar.tsx","components/home/home.tsx","components/questions/styles.tsx","components/questions/newques.tsx","components/login/login.tsx","components/answers/searchbar.tsx","components/answers/styles.tsx","components/answers/answers.tsx","components/homepage/addgroup.tsx","components/homepage/entergroup.tsx","components/homepage/homepage.tsx","routes.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","NavbarContainer","styled","div","Title","Bulb","HiLightBulb","Profile","initialState","idtoken","userId","profile","name","email","photo","loading","authSlice","createSlice","reducers","Login","state","action","window","location","assign","payload","displayName","photoURL","token","userid","Logout","localStorage","removeItem","SetLoading","Authenticate","flag","dispatch","a","auth","signInWithPopup","GoogleAuthProvider","then","res","user","providerData","credential","idToken","uid","catch","error","signOut","console","log","actions","useStyles","makeStyles","menu","backgroundColor","color","marginTop","padding","borderRadius","items","fontSize","fontWeight","Navbar","history","useHistory","classes","useState","open","setopen","anchorRef","React","useRef","useDispatch","useSelector","handleClose","e","current","contains","target","onClick","push","ref","undefined","prevOpen","Avatar","src","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","className","MenuItem","calcPercent","number","percentage","parseFloat","toFixed","find_percentage","questions","map","question","single_ques","b","c","d","answers","Object","keys","saved","total","questionSlice","input","options","ChangeInput","type","value","CleanInput","OptionError","alert","StartFetching","Fetchquestions","temp","index","TickQuestion","getState","checked_opt","database","child","group","active_group","val","once","snapshot","opt","update","groupSlice","group_list","active_user_groups","error1","perror","Fetchgroup","GroupVerified","SetErrortoNull","SetPwdErrortoNull","SetError","SetPwdError","SetInitialState","SetActiveUserGroups","SetActiveGroupToNull","CreateNewGroup","Name","Password","callback","groupsRef","groupsRef1","groups_info","snap","EnterGroup","groupname","password","all_group","PrimaryColor","QuestionContainer","Flex","Question","Options","keyframes","props","checked","SaveButton","ClearButton","Div","Loader","Search","AllQuestionSearchbar","placeholder","onChange","setinput","MainContainer","InfoContainer","Info","Container","theme","popper","zIndex","paper","width","display","flexDirection","justifyContent","alignContent","gap","typography","spacing","Topbar","ques_marked","setques_marked","ques","setAnchorEl","useEffect","all_ques","ans","to","Badge","badgeContent","length","currentTarget","prev","Fade","timeout","CopyQuestion","copy","backdrop","savebutton","Home","search","setsearch","filtered_questions","set_filtered_questions","setpercentage","setInput","document","querySelectorAll","i","pathname","dataset","classList","add","remove","on","FetchQuestions","questionid","quesRef","CreateUserField","sar","toLowerCase","yash_temp","filter","includes","ques_per","perc","CircularProgress","Fragment","count","split","str","option","saved_opt","ans_options","SaveAnswer","quesRef1","ClearAnswer","ChangeInputHandler","Button","SaveQues_Num","QuesContainer","disable","Newques","setdisable","prevstate","InputChangeHandler","toUpperCase","Math","random","Addquestion","root","height","alignItems","bullet","margin","transform","title","pos","marginBottom","button","drawer","opacity","Card","variant","endIcon","AllAnswerSearchbar","OptionContainer","OptionTop","Number","Answers","newques","final_ques","ques_num","FormContainer","GroupTitle","h2","ButtonGroup","btn","Addgroup","err","onClose","Modal","addgroup","TextField","helperText","fullWidth","autoFocus","label","onFocus","onKeyPress","code","pressEnter","Entergroup","entergroup","onSubmit","preventDefault","flexWrap","position","text","textAlign","loader","flex","heading","divider","borderBottom","borderBottomColor","hr","nogroup","abs","bottom","right","tip","dltbtn","HomePage","setOpen","activegroup","setactivegroup","groups","all_groups_name","user_groups","handleOpen","checkdisabled","Tooltip","tooltip","Fab","Divider","elevation","centerRipple","IconButton","disabled","group_id","groupRef2","DeleteGroup","Routes","exact","path","component","Addques","App","onAuthStateChanged","persistConfig","key","storage","rootReducer","combineReducers","authReducer","quesReducer","groupReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.26aeea8e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDgxH6AZ3ZC3qSeXdB7EILA96koRBtTBMU\",\n  authDomain: \"thecheat-007.firebaseapp.com\",\n  databaseURL: \"https://thecheat-007-default-rtdb.firebaseio.com\",\n  projectId: \"thecheat-007\",\n  storageBucket: \"thecheat-007.appspot.com\",\n  messagingSenderId: \"30742964610\",\n  appId: \"1:30742964610:web:aabb71a13177b8a39e479b\",\n  measurementId: \"G-FKTEPQCQZQ\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import styled from \"styled-components\";\nimport { HiLightBulb } from \"react-icons/hi\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\nexport const NavbarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 56px;\n  width: 100%;\n  background-color: ${PrimaryColor};\n  color: white;\n`;\n\nexport const Title = styled.div`\n  @import url(\"https://fonts.googleapis.com/css2?family=Palette+Mosaic&family=Roboto+Slab&display=swap\");\n  font-size: 28px;\n  font-weight: 800;\n  margin-left: 12px;\n  font-family: \"Roboto Slab\", serif;\n  &:hover {\n    cursor: pointer;\n    svg {\n      fill: #28d223;\n    }\n  }\n`;\n\nexport const Bulb = styled(HiLightBulb)``;\n\nexport const NavbarItem = styled.div`\n  margin: 5px;\n  color: white;\n  font-size: 20px;\n  background-color: ${SecendoryColor};\n  padding: 5px;\n  margin-right: 10px;\n  border-radius: 5px;\n  &:hover {\n    background-color: ${hoverColor};\n    cursor: pointer;\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  margin-right: 12px;\n  &:hover{\n    cursor: pointer;\n  }\n`;\n\nexport const Name = styled.div`\n  color: white;\n  font-size: 20px;\n  margin-left: 10px;\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\nimport { setConstantValue } from \"typescript\";\nimport { stat } from \"fs\";\ninterface Props {\n  idtoken: any;\n  userId: any;\n  profile: any;\n  loading: any;\n}\n\nconst initialState: Props = {\n  idtoken: null,\n  userId: null,\n  profile: {\n    name: null,\n    email: null,\n    photo: null,\n  },\n  loading: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    Login: (state, action) => {\n      window.location.assign(\"/SolvitEasy/home\");\n      state.profile.name = action.payload.profile[0].displayName;\n      state.profile.email = action.payload.profile[0].email;\n      state.profile.photo = action.payload.profile[0].photoURL;\n      state.idtoken = action.payload.token;\n      state.userId = action.payload.userid;\n    },\n    Logout: (state) => {\n      localStorage.removeItem(\"persist:root\");\n      state = { ...initialState };\n      window.location.assign(\"/SolvitEasy\");\n    },\n    SetLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n});\n\nexport const Authenticate = (flag: boolean): AppThunk => {\n  return async (dispatch) => {\n    if (flag) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n        .then((res: any) => {\n          dispatch(SetLoading(true));\n          if (res.user) {\n            dispatch(\n              Login({\n                profile: res.user.providerData,\n                token: res.credential.idToken,\n                userid: res.user.uid,\n              })\n            );\n          }\n          dispatch(SetLoading(false));\n        })\n        .catch((error) => {});\n    } else {\n      firebase\n        .auth()\n        .signOut()\n        .then((res) => {\n          dispatch(Logout());\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n};\n\nexport const { Login, Logout, SetLoading } = authSlice.actions;\nexport default authSlice.reducer;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { NavbarContainer, Profile, Title, Bulb } from \"./styles\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router\";\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport { Authenticate } from \"../../store/reducers/auth\";\n\nconst useStyles = makeStyles({\n  menu: {\n    backgroundColor: \"#002B6B\",\n    color: \"white\",\n    marginTop: \"4px\",\n    padding: \"0px 10px\",\n    borderRadius: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"#294580\",\n    },\n  },\n  items: {\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Navbar = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [open, setopen] = useState(false);\n  const anchorRef: any = React.useRef(null);\n  const dispatch = useDispatch();\n  const [token, name, email, photo]: any = useSelector((state: RootState) => {\n    return [\n      state.auth.idtoken,\n      state.auth.profile.name,\n      state.auth.profile.email,\n      state.auth.profile.photo,\n    ];\n  });\n\n  const handleToggle = () => {\n    setopen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (e: any) => {\n    if (anchorRef.current && anchorRef.current.contains(e.target)) {\n      return;\n    }\n\n    setopen(false);\n  };\n\n  const DirectToHome = () => {\n    history.push(\"/home\");\n  };\n\n  return (\n    <NavbarContainer>\n      <Title onClick={DirectToHome}>\n        Solvi\n        <Bulb />\n        easY\n      </Title>\n      <Profile\n        ref={anchorRef}\n        aria-controls={open ? \"menu-list-grow\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n      >\n        <Avatar src={photo} />\n        {/* <Name>{name?.substr(0, name.indexOf(\" \"))}</Name> */}\n      </Profile>\n      <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id=\"menu-list-grow\"\n                  className={classes.menu}\n                >\n                  <MenuItem\n                    className={classes.items}\n                    onClick={() => dispatch(Authenticate(false))}\n                  >\n                    Logout\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </NavbarContainer>\n  );\n};\n\nexport default Navbar;\n","const calcPercent = (number: any, percentage: any) => {\n  const result = number / percentage;\n  return parseFloat(result.toFixed(2));\n};\n\nexport const find_percentage = (questions: any) => {\n  let all_ques = [...questions];\n\n  var newques = all_ques.map((question: any) => {\n    let single_ques: any = { ...question };\n    let a: number = 0;\n    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    const answers = { ...question.answers };\n    Object.keys(answers).map((user: any) => {\n      if (answers[user].saved.a === true) a = a + 1;\n      if (answers[user].saved.b === true) b = b + 1;\n      if (answers[user].saved.c === true) c = c + 1;\n      if (answers[user].saved.d === true) d = d + 1;\n    });\n    const total = a + b + c + d;\n    if (total === 0) {\n      let percentage = {\n        ...single_ques.percentage,\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n      };\n      single_ques.percentage = percentage;\n    } else {\n      let percentage = {\n        ...single_ques.percentage,\n        a: calcPercent(a, total) * 100,\n        b: calcPercent(b, total) * 100,\n        c: calcPercent(c, total) * 100,\n        d: calcPercent(d, total) * 100,\n      };\n      single_ques.percentage = percentage;\n      single_ques.number = {\n        ...single_ques.number,\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n      };\n    }\n    return single_ques;\n  });\n  return newques;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\nimport { find_percentage } from \"../../components/percentage/percentage\";\n\ninterface Props {\n  questions: any;\n  input: any;\n  loading: boolean;\n}\n\nconst initialState: Props = {\n  questions: [],\n  input: {\n    question: \"\",\n    options: {\n      a: \"\",\n      b: \"\",\n      c: \"\",\n      d: \"\",\n    },\n  },\n  loading: false,\n};\n\nconst questionSlice = createSlice({\n  name: \"questions\",\n  initialState,\n  reducers: {\n    ChangeInput: (state, action) => {\n      if (action.payload.type === \"question\") {\n        state.input.question = action.payload.value;\n      } else {\n        state.input.options[`${action.payload.type}`] = action.payload.value;\n      }\n    },\n    CleanInput: (state) => {\n      state.input.question = \"\";\n      state.input.options = {\n        a: \"\",\n        b: \"\",\n        c: \"\",\n        d: \"\",\n      };\n    },\n    OptionError: (state) => {\n      alert(\"Fill All Options\");\n    },\n    StartFetching: (state, action) => {\n      state.loading = true;\n    },\n    Fetchquestions: (state, action) => {\n      const temp: any = [];\n      if (action.payload) {\n        Object.keys(action.payload).map((id, index) => {\n          temp.push(action.payload[id]);\n          temp[index].id = id;\n        });\n        state.questions = temp;\n      } else {\n        state.questions = [];\n      }\n      state.loading = false;\n    },\n  },\n});\n\nexport const CreateUserField = (questionid: any, userId: any): AppThunk => {\n  return (dispatch, getState) => {\n    const quesRef = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(questionid)\n      .child(\"answers\");\n    quesRef.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      quesRef.update({\n        ...val,\n        [userId]: {\n          checked: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n          saved: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n        },\n      });\n    });\n  };\n};\n\nexport const TickQuestion = (payload: any): AppThunk => {\n  return (dispatch, getState) => {\n    const checked_opt = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(payload.id)\n      .child(\"answers\")\n      .child(payload.userId)\n      .child(\"checked\");\n    let val: any = null;\n    checked_opt.once(\"value\", (snapshot) => {\n      val = snapshot.val();\n      Object.keys(val).map((opt) => {\n        if (opt === payload.type) {\n          val[opt] = true;\n        } else {\n          val[opt] = false;\n        }\n      });\n      checked_opt.update({\n        ...val,\n      });\n    });\n  };\n};\n\nexport const Addquestion = (groupname: any): AppThunk => {\n  return (dispatch, getState) => {\n    const input = getState().ques.input;\n\n    const ques = {\n      id: Math.random(),\n      count: Object.keys(getState().ques.questions).length + 1,\n      question: input.question,\n      option: {\n        a: { value: input.options.a },\n        b: { value: input.options.b },\n        c: { value: input.options.c },\n        d: { value: input.options.d },\n      },\n      percentage: {\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n      },\n      number: {\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n      },\n      answers: {\n        [getState().auth.userId]: {\n          checked: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n          saved: {\n            a: false,\n            b: false,\n            c: false,\n            d: false,\n          },\n        },\n      },\n    };\n    if (\n      input.options.a != \"\" &&\n      input.options.b != \"\" &&\n      input.options.c != \"\" &&\n      input.options.d != \"\" &&\n      input.question != \"\"\n    ) {\n      const quesRef = firebase.database().ref(\"Groups\").child(groupname);\n      quesRef.push(ques);\n      dispatch(CleanInput());\n    } else {\n      dispatch(OptionError());\n    }\n  };\n};\n\nexport const FetchQuestions = (groupname: any): AppThunk => {\n  return (dispatch) => {\n    if (groupname) {\n      dispatch(StartFetching(true));\n      const quesRef = firebase.database().ref(\"Groups\").child(groupname);\n      quesRef.on(\"value\", (snapshot) => {\n        const ques = snapshot.val();\n        dispatch(Fetchquestions(ques));\n      });\n    }\n  };\n};\n\nexport const ClearAnswer = (questions: any, id: any, userId: any) => {\n  return (dispatch: any, getState: any) => {\n    const quesRef = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n    const quesRef1 = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"checked\");\n    let val: any = null;\n    const options = {\n      a: false,\n      b: false,\n      c: false,\n      d: false,\n    };\n    quesRef.update({\n      ...options,\n    });\n    quesRef1.update({\n      ...options,\n    });\n\n    const all_ques = find_percentage(getState().ques.questions);\n    const ques: any = all_ques.filter((question) => {\n      if (question.id === id) {\n        return question;\n      }\n    });\n\n    const perc = { ...ques[0].percentage };\n\n    const ques_percentage = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(id)\n      .child(\"percentage\");\n    ques_percentage.update({\n      ...perc,\n    });\n  };\n};\n\nexport const SaveAnswer = (questions: any, id: any, userId: any): AppThunk => {\n  return (dispatch, getState) => {\n    let opt: any = null;\n    const groupname = getState().group.active_group;\n\n    const checked_opt = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(groupname)\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"checked\");\n    const saved_opt = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(groupname)\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"saved\");\n\n    checked_opt.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      Object.keys(val).map((option) => {\n        if (val[option]) {\n          opt = option;\n        }\n      });\n      const ans_options = {\n        a: \"a\" === opt,\n        b: \"b\" === opt,\n        c: \"c\" === opt,\n        d: \"d\" === opt,\n      };\n      saved_opt.update({\n        ...ans_options,\n      });\n      checked_opt.update({\n        ...ans_options,\n        a: false,\n        b: false,\n        c: false,\n        d: false,\n      });\n    });\n\n    const all_ques = find_percentage(getState().ques.questions);\n    const ques: any = all_ques.filter((question) => {\n      if (question.id === id) {\n        return question;\n      }\n    });\n\n    const perc = { ...ques[0].percentage };\n\n    const ques_percentage = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(groupname)\n      .child(id)\n      .child(\"percentage\");\n    ques_percentage.update({\n      ...perc,\n    });\n  };\n};\n\nexport const SaveQues_Num = (id: any, userId: any, number: any): AppThunk => {\n  return (dispatch, getState) => {\n    const ques_num = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(getState().group.active_group)\n      .child(id)\n      .child(\"answers\")\n      .child(userId)\n      .child(\"ques_num\");\n    ques_num.update({\n      number,\n    });\n  };\n};\n\nexport const {\n  Fetchquestions,\n  ChangeInput,\n  CleanInput,\n  OptionError,\n  StartFetching,\n} = questionSlice.actions;\nexport default questionSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport firebase from \"../../firebase-config\";\n\ninterface Props {\n  group_list: any;\n  active_group: any;\n  active_user_groups: null;\n  error: string;\n  error1: string;\n  perror: string;\n  loading: boolean;\n}\n\nconst initialState: Props = {\n  group_list: null,\n  active_group: null,\n  active_user_groups: null,\n  error: \"\",\n  error1: \"\",\n  perror: \"\",\n  loading: false,\n};\n\nconst groupSlice = createSlice({\n  name: \"groups\",\n  initialState,\n  reducers: {\n    Fetchgroup: (state, action) => {\n      state.group_list = action.payload;\n    },\n    GroupVerified: (state, action) => {\n      state.active_group = action.payload;\n      window.location.assign(\"/SolvitEasy/home/questions\");\n    },\n    SetErrortoNull: (state) => {\n      state.error = \"\";\n    },\n    SetPwdErrortoNull: (state) => {\n      state.error1 = \"\";\n    },\n    SetError: (state, action) => {\n      state.error = action.payload;\n    },\n    SetPwdError: (state, action) => {\n      state.error1 = action.payload;\n    },\n    SetLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    SetInitialState: (state) => {\n      state.group_list = null;\n      state.active_group = null;\n      state.error = \"\";\n      state.perror = \"\";\n      state.loading = false;\n    },\n    SetActiveUserGroups: (state, action) => {\n      state.active_user_groups = action.payload;\n    },\n    SetActiveGroupToNull: (state) => {\n      state.active_group = null;\n    },\n  },\n});\n\nexport const FetchGroupsInfo = (): AppThunk => {\n  return (dispatch) => {\n    dispatch(SetLoading(true));\n    const groupsRef = firebase.database().ref(\"Groups\").child(\"Info\");\n    groupsRef.on(\"value\", (snapshot) => {\n      const groups = snapshot.val();\n      if (groups) {\n        const all_groups_name = Object.keys(groups);\n        dispatch(Fetchgroup(all_groups_name));\n      } else {\n        dispatch(SetInitialState());\n      }\n      dispatch(SetLoading(false));\n    });\n  };\n};\n\nexport const FetchUserGroups = (user: string): AppThunk => {\n  return (dispatch) => {\n    const groupsRef1 = firebase\n      .database()\n      .ref(\"Groups\")\n      .child(\"Users\")\n      .child(user);\n    groupsRef1.on(\"value\", (snapshot) => {\n      const user_groups = snapshot.val();\n      if (user_groups) {\n        const temp = Object.keys(user_groups).map(\n          (group) => user_groups[group]\n        );\n        dispatch(SetActiveUserGroups(temp));\n      }\n    });\n  };\n};\n\nexport const CreateNewGroup = (\n  Name: any,\n  Password: any,\n  user: any,\n  callback: any\n): AppThunk => {\n  return (dispatch) => {\n    if (Name === \"\") {\n      dispatch(SetError(\"Can't leave the field empty\"));\n    } else if (Password === \"\") {\n      dispatch(SetPwdError(\"Can't leave the field empty\"));\n    } else {\n      const groupsRef = firebase.database().ref(\"Groups\").child(\"Info\");\n      const groupsRef1 = firebase\n        .database()\n        .ref(\"Groups\")\n        .child(\"Users\")\n        .child(user);\n      groupsRef.once(\"value\", (snapshot) => {\n        const groups_info = snapshot.val();\n        if (groups_info && Name in groups_info) {\n          dispatch(SetError(\"Group Name already Exists\"));\n          callback(true);\n        } else {\n          groupsRef.update({\n            ...groups_info,\n            [Name]: Password,\n          });\n          groupsRef1.once(\"value\", (snap) => {\n            const user_groups = snap.val();\n            if (user_groups) {\n              groupsRef1.push(Name);\n            } else {\n              groupsRef1.push(Name);\n            }\n          });\n          callback(false);\n        }\n      });\n    }\n  };\n};\n\nexport const EnterGroup = (groupname: string, password: any): AppThunk => {\n  return (dispatch) => {\n    const groupsRef = firebase.database().ref(\"Groups\").child(\"Info\");\n    groupsRef.once(\"value\", (snapshot) => {\n      const all_group = snapshot.val();\n      Object.keys(all_group).map((group) => {\n        if (group === groupname) {\n          if (password === all_group[groupname]) {\n            dispatch(GroupVerified(groupname));\n          } else {\n            dispatch(SetError(\"Incorrect Password\"));\n          }\n        }\n      });\n    });\n  };\n};\n\nexport const DeleteGroup = (groupname: any, user: string): AppThunk => {\n  return (dispatch) => {\n    const groupsRef = firebase.database().ref(`/Groups/Info/${groupname}`);\n    groupsRef.once(\"value\", (snap) => {\n      groupsRef.remove();\n    });\n    const groupsRef1 = firebase.database().ref(`/Groups/Users/${user}`);\n    groupsRef1.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      let group_id: any = null;\n      Object.keys(snapshot.val()).map((group) => {\n        if (val[group] === groupname) {\n          group_id = group;\n        }\n      });\n      groupsRef1.child(group_id).remove();\n    });\n    const groupRef2 = firebase.database().ref(`Groups/${groupname}`);\n    groupRef2.once(\"value\", (snapshot) => {\n      const val = snapshot.val();\n      if (val) {\n        groupRef2.remove();\n      }\n    });\n  };\n};\n\nexport const {\n  Fetchgroup,\n  SetError,\n  SetPwdError,\n  SetPwdErrortoNull,\n  SetErrortoNull,\n  SetLoading,\n  GroupVerified,\n  SetInitialState,\n  SetActiveUserGroups,\n  SetActiveGroupToNull,\n} = groupSlice.actions;\n\nexport default groupSlice.reducer;\n","import styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\ninterface options {\n  checked: any;\n  saved: any;\n}\n\nexport const QuestionContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 80%;\n  margin: 20px auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 100px;\n  background-color: white;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  div {\n    .copy-btn {\n      font-size: 50px;\n      padding: 10px;\n      &:hover {\n        cursor: pointer;\n        background-color: #c6c6c6;\n        border-radius: 50%;\n      }\n    }\n  }\n`;\n\nexport const Question = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 20px;\n  width: 100%;\n  span {\n    position: relative;\n    width: 50px;\n    height: 50px;\n    .tick {\n      font-size: 25px;\n      color: green;\n    }\n    .cross {\n      font-size: 15px;\n      fill: red;\n    }\n  }\n`;\n\nconst animate = keyframes`\n  0%{\n    width:10%\n  }\n  100%{\n    width:100%;\n  }\n`;\nexport const Options = styled.div<options>`\n  margin-top: 10px;\n  position: relative;\n  font-size: 17px;\n  padding: 10px 5px;\n  border-radius: 5px;\n  background-color: ${(props) => {\n    if (props.saved == true) {\n      return \"#75d9a6\";\n    } else if (props.checked == true) {\n      return \"#d0eef4;\";\n    } else {\n      return \"#eee\";\n    }\n  }};\n  border-radius: 5px;\n  word-wrap: break-word;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const AddButton = styled.div`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  height: 40px;\n  width: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${PrimaryColor};\n  color: white;\n  font-size: 20px;\n  border-radius: 50%;\n  &:hover {\n    background-color: #294580;\n    cursor: pointer;\n  }\n`;\n\nexport const SaveButton = styled.div`\n  margin-top: 20px;\n  padding: 10px;\n  padding-left: 11px;\n  background-color: ${PrimaryColor};\n  color: white;\n  border-radius: 5px;\n  &:hover {\n    background-color: #485a82;\n    cursor: pointer;\n  }\n`;\n\nexport const ClearButton = styled(SaveButton)``;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #input {\n    margin-top: 20px;\n    div {\n      background-color: #97b3ee;\n      padding: 10px;\n      margin-right: 10px;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 15px;\n    input {\n      font-size: 15px;\n      height: 30px;\n      width: 40px;\n      border: none;\n      outline: none;\n      padding: 2px;\n      border: 1px solid grey;\n    }\n  }\n`;\n\nexport const Loader = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllQuestionSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Search\n        type=\"text\"\n        placeholder=\"Search Your Question\"\n        value={props.input}\n        onChange={(e) => props.setinput(e.target.value)}\n      ></Search>\n    </div>\n  );\n};\n\nexport default AllQuestionSearchbar;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: auto;\n  margin-top: 40px;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n`;\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  --webkit-user-select: none;\n  svg {\n    font-size: 30px;\n    --webkit-user-select: none;\n    &:hover {\n      fill: ${PrimaryColor};\n    }\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 10px;\n  .inside-info {\n    display: inline-flex;\n    justify-content: center;\n    margin-right: 5px;\n    width: 25px;\n    height: 25px;\n    background-color: #75d9a6;\n    gap: 5px;\n  }\n  .badge {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 5px;\n    width: 30px;\n    height: 30px;\n  }\n  #selected {\n    background-color: #d0eef4;\n  }\n  .tick {\n    color: green !important;\n    font-size: 30px !important;\n  }\n  .cross {\n    color: red !important;\n    font-size: 30px !important;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  a {\n    text-decoration: none;\n  }\n  div {\n    background-color: #3f5e8c;\n    color: white;\n    font-weight: bold;\n    padding: 10px;\n    border-radius: 5px;\n    &:hover {\n      background-color: ${hoverColor};\n      cursor: pointer;\n    }\n  }\n  .active {\n    background-color: ${PrimaryColor};\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, MainContainer, InfoContainer, Info } from \"./styles\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Badge,\n  Popper,\n  Fade,\n  Paper,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store/store\";\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\nimport { isMobile } from \"react-device-detect\";\nimport { ClickAwayListener } from \"@material-ui/core\";\nimport { TiTick } from \"react-icons/ti\";\nimport { ImCross } from \"react-icons/im\";\n\nconst useStyles = makeStyles((theme) => ({\n  popper: {\n    zIndex: 100,\n  },\n  paper: {\n    width: 300,\n    padding: 15,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    gap: \"5px\",\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst Topbar = () => {\n  const [ques_marked, setques_marked] = useState(null);\n  const questions = useSelector((state: RootState) => state.ques.questions);\n  const [anchorEl, setAnchorEl]: any = useState(null);\n  const [open, setopen]: any = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    const all_ques = [...questions];\n    let ans: any = 0;\n    var newques = all_ques.map((question: any) => {\n      let flag: boolean = false;\n      const answers = { ...question.answers };\n      Object.keys(answers).map((user: any) => {\n        if (answers[user].saved.a === true) flag = true;\n        if (answers[user].saved.b === true) flag = true;\n        if (answers[user].saved.c === true) flag = true;\n        if (answers[user].saved.d === true) flag = true;\n      });\n      if (flag) {\n        ans++;\n      }\n    });\n    if (ans === 0) {\n      ans = null;\n    }\n    setques_marked(ans);\n  }, [questions]);\n  return (\n    <MainContainer>\n      <Container>\n        <Link to=\"/home/questions\">\n          <Badge\n            badgeContent={questions.length > 0 ? questions.length : null}\n            color=\"secondary\"\n          >\n            <div data-name=\"/home/questions\" className=\"item active\">\n              Questions\n            </div>\n          </Badge>\n        </Link>\n        <Badge badgeContent={ques_marked} color=\"primary\">\n          <Link to=\"/home/answers\">\n            <div data-name=\"/home/answers\" className=\"item\">\n              Answers\n            </div>\n          </Link>\n        </Badge>\n        <Link to=\"/home/addques\">\n          <div data-name=\"/home/addques\" className=\"item\">\n            Add\n          </div>\n        </Link>\n      </Container>\n      <InfoContainer>\n        <div>\n          <BsFillQuestionCircleFill\n            onClick={(e) => {\n              setAnchorEl(e.currentTarget);\n              setopen((prev: any) => !prev);\n            }}\n          />\n        </div>\n        <Popper\n          className={classes.popper}\n          open={open}\n          anchorEl={anchorEl}\n          placement=\"bottom-end\"\n          transition\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper className={classes.paper}>\n                <Info>\n                  <span className=\"inside-info\" id=\"selected\"></span>{\" \"}\n                  <span>Selected Option</span>\n                </Info>\n                <Info>\n                  <span className=\"inside-info\"></span>\n                  <span>Ticked Option</span>\n                </Info>\n                <Info>\n                  <span>\n                    <CheckIcon className=\"tick\" fontSize=\"small\" />\n                  </span>{\" \"}\n                  <span>Q. atleast marked by one person</span>\n                </Info>\n                <Info>\n                  <span>\n                    <ClearIcon className=\"cross\" fontSize=\"small\" />\n                  </span>{\" \"}\n                  <span>Q. not marked by anyone</span>\n                </Info>\n                <Info>\n                  <span className=\"badge\">\n                    <Badge badgeContent={5} color=\"secondary\" />\n                  </span>\n                  <span>Total Number of Ques. added</span>\n                </Info>\n                <Info>\n                  <span className=\"badge\">\n                    <Badge badgeContent={2} color=\"primary\" />\n                  </span>\n                  <span>Total Number of Ques. answered</span>\n                </Info>\n                <Info>\n                  <span>YQN. </span>\n                  <span>\n                    <b>Your Question Number</b> - this number will show in\n                    Answers section. This is helpful when the ques. are\n                    shuffled.\n                  </span>\n                </Info>\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </InfoContainer>\n    </MainContainer>\n  );\n};\n\nexport default Topbar;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport Navbar from \"../navbar/navbar\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  TickQuestion,\n  SaveAnswer,\n  ClearAnswer,\n  FetchQuestions,\n  CreateUserField,\n  SaveQues_Num,\n} from \"../../store/reducers/question\";\nimport { SetActiveGroupToNull } from \"../../store/reducers/group\";\nimport {\n  Options,\n  Question,\n  QuestionContainer,\n  SaveButton,\n  Div,\n  ClearButton,\n  Flex,\n  Loader,\n} from \"./styles\";\nimport Searchbar from \"./searchbar\";\nimport copy from \"copy-to-clipboard\";\nimport { AiFillCopy } from \"react-icons/ai\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { TiTick } from \"react-icons/ti\";\nimport { ImCross } from \"react-icons/im\";\n\nexport const CopyQuestion = (ques: any) => {\n  copy(ques);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    color: \"#fff\",\n  },\n  savebutton: {\n    fontWeight: \"bold\",\n    backgroundColor: \"#97b3ee\",\n    \"&:hover\": {\n      backgroundColor: \"#bacbf0\",\n    },\n  },\n}));\n\nconst Home = () => {\n  const [search, setsearch] = useState(\"\");\n\n  const [filtered_questions, set_filtered_questions] = useState([]);\n  const [percentage, setpercentage]: any = useState(null);\n  const [ele, setele]: any = useState(null);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [token, questions, userId, loading, groupname, group_list] =\n    useSelector((state: RootState) => {\n      return [\n        state.auth.idtoken,\n        state.ques.questions,\n        state.auth.userId,\n        state.ques.loading,\n        state.group.active_group,\n        state.group.group_list,\n      ];\n    });\n\n  const [input, setInput]: any = useState(\n    Object.keys(questions).map((ques: any) => {\n      return { [ques.id]: \"\" };\n    })\n  );\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname;\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (group_list) {\n      let flag: boolean = true;\n      group_list.map((group: string) => {\n        if (groupname === group) {\n          flag = false;\n        }\n      });\n      if (flag) {\n        dispatch(SetActiveGroupToNull());\n        history.push(\"/home\");\n      }\n    }\n\n    if (!groupname) {\n      history.push(\"/home\");\n    }\n  }, [groupname, group_list]);\n\n  useEffect(() => {\n    dispatch(FetchQuestions(groupname));\n  }, []);\n\n  useEffect(() => {\n    if (questions) {\n      const temp = questions;\n      temp.map((question: any) => {\n        const answers = question.answers;\n        if (userId in answers) {\n        } else {\n          dispatch(CreateUserField(question.id, userId));\n        }\n      });\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    const ques: any = [];\n    var sar = search.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n      }\n    });\n    set_filtered_questions(ques);\n  }, [search, questions]);\n\n  useEffect(() => {\n    const ques_per = questions.map((ques: any) => {\n      const perc = { ...ques.percentage };\n      if (perc.a == 0 && perc.b == 0 && perc.c == 0 && perc.d == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setpercentage(ques_per);\n  }, [questions]);\n\n  const ChangeInputHandler = (e: any, question: any) => {\n    setInput({\n      [question.id]: e.target.value,\n    });\n  };\n\n  if (loading) {\n    return (\n      <Loader>\n        <CircularProgress />\n      </Loader>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Searchbar input={search} setinput={setsearch} />\n      <QuestionContainer id=\"container\">\n        {filtered_questions ? (\n          filtered_questions.map((question: any) => {\n            return (\n              <React.Fragment key={question.id}>\n                <Flex>\n                  <Question>\n                    <b>Ques {question?.count}:</b>{\" \"}\n                    {question.question.split(\"\\n\").map((str: any) => (\n                      <span>\n                        {str}\n                        <br />\n                      </span>\n                    ))}{\" \"}\n                    <span>\n                      {percentage[question.count - 1] ? (\n                        <TiTick className=\"tick\" />\n                      ) : (\n                        <ImCross className=\"cross\" />\n                      )}\n                    </span>\n                  </Question>\n                  <div>\n                    <AiFillCopy\n                      className=\"copy-btn\"\n                      onClick={() => CopyQuestion(question.question)}\n                    />\n                  </div>\n                </Flex>\n                <Options\n                  checked={question.answers[userId]?.checked.a}\n                  saved={question.answers[userId]?.saved.a}\n                  onClick={() =>\n                    dispatch(\n                      TickQuestion({\n                        type: \"a\",\n                        id: question.id,\n                        userId: userId,\n                      })\n                    )\n                  }\n                >\n                  <div>\n                    <b>A:</b> {question.option.a.value}\n                  </div>\n                </Options>\n                <Options\n                  checked={question.answers[userId]?.checked.b}\n                  saved={question.answers[userId]?.saved.b}\n                  onClick={() =>\n                    dispatch(\n                      TickQuestion({\n                        type: \"b\",\n                        id: question.id,\n                        userId: userId,\n                      })\n                    )\n                  }\n                >\n                  <b>B:</b> {question.option.b.value}\n                </Options>\n                <Options\n                  checked={question.answers[userId]?.checked.c}\n                  saved={question.answers[userId]?.saved.c}\n                  onClick={() =>\n                    dispatch(\n                      TickQuestion({\n                        type: \"c\",\n                        id: question.id,\n                        userId: userId,\n                      })\n                    )\n                  }\n                >\n                  <b>C:</b> {question.option.c.value}\n                </Options>\n                <Options\n                  checked={question.answers[userId]?.checked.d}\n                  saved={question.answers[userId]?.saved.d}\n                  onClick={() =>\n                    dispatch(\n                      TickQuestion({\n                        type: \"d\",\n                        id: question.id,\n                        userId: userId,\n                      })\n                    )\n                  }\n                >\n                  <b>D:</b> {question.option.d.value}\n                </Options>\n                <Div>\n                  <div>\n                    <SaveButton\n                      onClick={(e) =>\n                        dispatch(SaveAnswer(questions, question.id, userId))\n                      }\n                    >\n                      Save\n                    </SaveButton>\n                    <ClearButton\n                      onClick={() =>\n                        dispatch(ClearAnswer(questions, question.id, userId))\n                      }\n                    >\n                      Clear\n                    </ClearButton>\n                  </div>\n\n                  <div id=\"input\">\n                    <input\n                      type=\"text\"\n                      name={question.count}\n                      value={input[question.id]}\n                      onChange={(e) => ChangeInputHandler(e, question)}\n                      placeholder=\"YQN..\"\n                    />\n                    <Button\n                      className={classes.savebutton}\n                      color=\"primary\"\n                      onClick={() =>\n                        dispatch(\n                          SaveQues_Num(\n                            question.id,\n                            userId,\n                            input?.[question.id]\n                          )\n                        )\n                      }\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </Div>\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <div style={{ width: \"100%\" }}>Add Your Questions</div>\n        )}\n      </QuestionContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#557EE6\";\ninterface Props {\n  disable: boolean;\n}\n\nexport const QuesContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  gap: 5px;\n  width: 80%;\n`;\n\nexport const Question = styled.div`\n  padding: 10px;\n  background-color: #fff;\n`;\nexport const Div = styled.div<Props>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  padding: 10px 15px;\n  color: white;\n  font-size: 20px;\n  width: 80px;\n  margin-bottom: 50px;\n  &:hover {\n    cursor: ${(props) => {\n      if (props.disable) {\n        return \"pointer\";\n      } else {\n        return \"disable\";\n      }\n    }};\n  }\n  background-color: ${(props) => {\n    if (props.disable) {\n      return \"#294580\";\n    } else {\n      return \"grey\";\n    }\n  }};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  textarea {\n    outline: none;\n    border: none;\n    border-radius: 5px;\n    padding: 5px;\n    resize: none;\n  }\n  #question {\n    margin-top: 20px;\n    width: 80%;\n    height: 250px;\n    font-size: 25px;\n    font-weight: bold;\n  }\n  #option {\n    width: 80%;\n    height: 70px;\n    font-size: 20px;\n    font-weight: 300;\n    word-wrap: break-word;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport { Container } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { ChangeInput, Addquestion } from \"../../store/reducers/question\";\nimport { Div } from \"./styles\";\nimport { Question, QuesContainer } from \"./styles\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { useHistory } from \"react-router-dom\";\nconst Newques = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [questions, question, options, token, groupname] = useSelector(\n    (state: RootState) => {\n      return [\n        state.ques.questions,\n        state.ques.input.question,\n        state.ques.input.options,\n        state.auth.idtoken,\n        state.group.active_group,\n      ];\n    }\n  );\n  const [disable, setdisable] = useState(false);\n  const [filtered_questions, set_filtered_questions] = useState([]);\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname;\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const ques: any = [];\n    var sar = question.toLowerCase();\n    const temp = questions.map((question: any) => {\n      let yash_temp: any = { ...question };\n      const hello = {\n        ...yash_temp,\n        question: yash_temp.question.toLowerCase(),\n      };\n      return hello;\n    });\n    temp.filter((question: any) => {\n      if (question.question.includes(sar)) {\n        ques.push(question);\n      }\n    });\n    if (ques.length === 0) {\n      setdisable((prevstate) => true);\n    } else setdisable((prevstate) => false);\n    set_filtered_questions(ques);\n  }, [question, questions]);\n\n  const InputChangeHandler = (e: any) => {\n    console.log(e.target.value);\n    let value = e.target.value;\n    value = value.split(\"\\n\").map((str: any) => console.log(str));\n    dispatch(ChangeInput({ type: e.target.name, value: e.target.value }));\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Container>\n        <textarea\n          name=\"question\"\n          placeholder=\"Type Your Question Here\"\n          id=\"question\"\n          value={question}\n          onChange={(e) => InputChangeHandler(e)}\n        />\n        <QuesContainer>\n          {question !== \"\"\n            ? filtered_questions.map((question: any) => {\n                return (\n                  <React.Fragment key={question.id}>\n                    <Question>\n                      <b>Ques {question?.count}:</b> {question.question}\n                    </Question>\n                  </React.Fragment>\n                );\n              })\n            : null}\n        </QuesContainer>\n        {Object.keys(options).map((option) => {\n          return (\n            <textarea\n              key={option}\n              name={option}\n              placeholder={\"Option\" + option.toUpperCase()}\n              id=\"option\"\n              value={options[option]}\n              onChange={(e) => InputChangeHandler(e)}\n            />\n          );\n        })}\n        {disable ? (\n          <Div\n            disable={disable}\n            id=\"btn\"\n            onClick={() => dispatch(Addquestion(groupname))}\n          >\n            Save\n          </Div>\n        ) : (\n          <Div disable={disable} id=\"btn\">\n            Save\n          </Div>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Newques;\n","import React from \"react\";\nimport { Authenticate } from \"../../store/reducers/auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { RootState } from \"../../store/store\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Loader } from \"../home/styles\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n    height: 300,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontWeight: \"bolder\",\n    color: \"white\",\n    backgroundColor: PrimaryColor,\n    \"&:hover\": {\n      backgroundColor: hoverColor,\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n    opacity: 0.5,\n  },\n}));\n\nconst Div = styled.div`\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -60%);\n`;\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [token, loading] = useSelector((state: RootState) => {\n    return [state.auth.idtoken, state.auth.loading];\n  });\n  const history = useHistory();\n  useEffect(() => {\n    if (token) {\n      history.push(\"/home\");\n    }\n  }, []);\n\n  if (loading) {\n    return (\n      <Loader>\n        <CircularProgress />\n      </Loader>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Div>\n        <Card className={classes.root}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            endIcon={<FcGoogle>send</FcGoogle>}\n            onClick={() => dispatch(Authenticate(true))}\n          >\n            Login With Google\n          </Button>\n        </Card>\n      </Div>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Search = styled.input`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  height: 50px;\n  outline: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst AllAnswerSearchbar = (props: any) => {\n  const dispatch = useDispatch();\n  return (\n    <Search\n      type=\"text\"\n      placeholder=\"Search Your Answer\"\n      value={props.input}\n      onChange={(e) => props.setInput(e.target.value)}\n    ></Search>\n  );\n};\n\nexport default AllAnswerSearchbar;\n","import styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\nexport { QuestionContainer, Question } from \"../home/styles\";\n\ninterface Props {\n  val: any;\n}\nexport const OptionContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n  gap: 5px;\n`;\n\nexport const Options = styled.div`\n  margin-top: 10px;\n  position: relative;\n  width: 100%;\n  font-size: 17px;\n  background-color: #eee;\n  border-radius: 5px;\n  padding: 10px 5px;\n  z-index: 1;\n`;\n\nconst animate = keyframes`\n  0%{\n    width:10%\n  }\n  100%{\n    width:100%;\n  }\n`;\n\nexport const OptionTop = styled.div<Props>`\n  font-size: 12px;\n  position: absolute;\n  height: 100%;\n  bottom: 0;\n  left: 0;\n  border-radius: 5px;\n  width: ${(props) => {\n    return `${props.val}%`;\n  }};\n  z-index: -1;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #b2f0b2;\n  /* @keyframes anime {\n    0% {\n      width: 0%;\n    }\n    100% {\n      width: ${(props) => {\n    return `${props.val}%`;\n  }};\n    }\n  } */\n`;\n\nexport const Number = styled.div`\n  width: 40px;\n  padding: 10px 5px;\n  text-align: center;\n  border-radius: 5px;\n  font-weight: bold;\n  background-color: #acd3e8;\n`;\n","import React from \"react\";\nimport Navbar from \"../navbar/navbar\";\nimport Topbar from \"../navbar/topbar/topbar\";\nimport { useEffect } from \"react\";\nimport Searchbar from \"./searchbar\";\nimport { useSelector } from \"react-redux\";\nimport {\n  QuestionContainer,\n  OptionContainer,\n  Options,\n  Question,\n  OptionTop,\n  Number,\n} from \"./styles\";\nimport { Flex } from \"../home/styles\";\nimport { RootState } from \"../../store/store\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { find_percentage } from \"../percentage/percentage\";\nimport { AiFillCopy } from \"react-icons/ai\";\nimport { CopyQuestion } from \"../home/home\";\n\nconst calcPercent = (number: any, percentage: any) => {\n  const result = number / percentage;\n  return parseFloat(result.toFixed(2));\n};\n\nconst Answers = () => {\n  const [search, setsearch] = useState(\"\");\n  const [filtered_questions, set_filtered_questions]: any = useState([]);\n  const history = useHistory();\n  const [questions, userId] = useSelector((state: RootState) => {\n    return [state.ques.questions, state.auth.userId];\n  });\n\n  useEffect(() => {\n    if (!userId) {\n      history.push(\"/\");\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    const location = history.location;\n    const items: any = document.querySelectorAll(\".item\");\n    for (let i = 0; i < items.length; i++) {\n      const path = location.pathname;\n      if (path === items[i].dataset.name) {\n        items[i].classList.add(\"active\");\n      } else {\n        items[i].classList.remove(\"active\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    set_filtered_questions((prevstate: any) => {\n      let all_ques = [...questions];\n\n      var newques = find_percentage(questions);\n      var sar = search.toLowerCase();\n      const temp = newques.map((question: any) => {\n        let yash_temp: any = { ...question };\n        const hello = {\n          ...yash_temp,\n          question: yash_temp.question.toLowerCase(),\n        };\n        return hello;\n      });\n      const final_ques = temp.filter((question: any) => {\n        if (question.question.includes(sar)) {\n          return question;\n        }\n      });\n      return [...final_ques];\n    });\n  }, [search, questions]);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Topbar />\n      <Searchbar input={search} setInput={setsearch} />\n      <QuestionContainer>\n        {filtered_questions.map((question: any) => {\n          return (\n            <React.Fragment key={question.id}>\n              <Flex>\n                <Question>\n                  <b>\n                    Ques{\" \"}\n                    {question.answers[userId].ques_num\n                      ? question.answers[userId].ques_num.number\n                      : null}\n                    :\n                  </b>{\" \"}\n                  {question.question}\n                </Question>\n                <OptionContainer>\n                  <AiFillCopy\n                    className=\"copy-btn\"\n                    onClick={() => CopyQuestion(question.question)}\n                  />\n                </OptionContainer>\n              </Flex>\n\n              <OptionContainer>\n                <Options>\n                  <div>\n                    <b>A:</b> {question.option.a.value}\n                  </div>\n                  <OptionTop val={question.percentage.a}></OptionTop>\n                </Options>\n                {question.number.a ? (\n                  <Number>{question.number.a}</Number>\n                ) : null}\n              </OptionContainer>\n\n              <OptionContainer>\n                <Options>\n                  <div>\n                    <b>B:</b> {question.option.b.value}\n                  </div>\n                  <OptionTop val={question.percentage.b}></OptionTop>\n                </Options>\n                {question.number.b ? (\n                  <Number>{question.number.b}</Number>\n                ) : null}\n              </OptionContainer>\n\n              <OptionContainer>\n                <Options>\n                  <div>\n                    <b>C:</b> {question.option.c.value}\n                  </div>\n                  <OptionTop val={question.percentage.c}></OptionTop>\n                </Options>\n                {question.number.c ? (\n                  <Number>{question.number.c}</Number>\n                ) : null}\n              </OptionContainer>\n\n              <OptionContainer>\n                <Options>\n                  <div>\n                    <b>D:</b> {question.option.d.value}\n                  </div>\n                  <OptionTop val={question.percentage.d}></OptionTop>\n                </Options>\n                {question.number.d ? (\n                  <Number>{question.number.c}</Number>\n                ) : null}\n              </OptionContainer>\n            </React.Fragment>\n          );\n        })}\n      </QuestionContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Answers;\n","import React, { useState } from \"react\";\nimport { TextField, Modal, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\nimport Fade from \"@material-ui/core/Fade\";\nimport {\n  CreateNewGroup,\n  SetErrortoNull,\n  SetPwdErrortoNull,\n} from \"../../store/reducers/group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\n\nconst PrimaryColor = \"#002B6B\";\nconst hoverColor = \"#294580\";\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 400px;\n  height: 400px;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  flex-direction: column;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  width: 80%;\n  margin: auto;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst GroupTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 20px;\n  margin-top: 100px;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  btn: {\n    backgroundColor: PrimaryColor,\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: hoverColor,\n    },\n  },\n}));\n\nconst Addgroup = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [input, setinput] = useState({\n    groupname: \"\",\n    password: \"\",\n  });\n\n  const [error, error1, user] = useSelector((state: RootState) => {\n    return [state.group.error, state.group.error1, state.auth.userId];\n  });\n\n  const CreateGroup = () => {\n    dispatch(CreateNewGroup(input.groupname, input.password, user, callback));\n  };\n\n  const pressEnter = (e: any) => {\n    if (e.code === \"Enter\") {\n      dispatch(CreateNewGroup(input.groupname, input.password, user, callback));\n    }\n  };\n\n  const callback = (err: any) => {\n    if (err) {\n    } else {\n      setinput({\n        groupname: \"\",\n        password: \"\",\n      });\n      props.onClose();\n    }\n  };\n\n  return (\n    <Modal\n      open={props.open.addgroup}\n      onClose={props.onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <>\n        <Container>\n          <GroupTitle>Create Your Group</GroupTitle>\n          <FormContainer>\n            <TextField\n              error={error !== \"\"}\n              helperText={error}\n              fullWidth\n              autoFocus\n              className={classes.name}\n              margin=\"dense\"\n              id=\"groupname\"\n              label=\"Group Name\"\n              type=\"text\"\n              value={input.groupname}\n              onFocus={(e) => {\n                dispatch(SetErrortoNull());\n              }}\n              onChange={(e) => {\n                setinput((prevstate) => {\n                  return { ...prevstate, groupname: e.target.value };\n                });\n              }}\n            />\n            <TextField\n              fullWidth\n              error={error1 !== \"\"}\n              helperText={error1}\n              className={classes.name}\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={input.password}\n              onChange={(e) =>\n                setinput((prevstate) => {\n                  return { ...prevstate, password: e.target.value };\n                })\n              }\n              onKeyPress={(e) => {\n                dispatch(SetPwdErrortoNull());\n                pressEnter(e);\n              }}\n              onFocus={(e) => {\n                dispatch(SetPwdErrortoNull());\n              }}\n            />\n            <ButtonGroup>\n              <Button onClick={CreateGroup} className={classes.btn}>\n                Create\n              </Button>\n              <Button onClick={props.onClose} className={classes.btn}>\n                Cancel\n              </Button>\n            </ButtonGroup>\n          </FormContainer>\n        </Container>\n      </>\n    </Modal>\n  );\n};\n\nexport default Addgroup;\n","import React, { useState } from \"react\";\nimport { TextField, Modal, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EnterGroup, SetErrortoNull } from \"../../store/reducers/group\";\nimport { RootState } from \"../../store/store\";\n\nconst PrimaryColor = \"#002B6B\";\nconst hoverColor = \"#294580\";\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 400px;\n  height: 400px;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  flex-direction: column;\n  h2 {\n    width: 100%;\n    align-items: center;\n  }\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  width: 80%;\n  margin: auto;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  h2 {\n    text-align: center;\n    margin-bottom: 80px;\n  }\n`;\n\nconst GroupTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 20px;\n  margin-top: 100px;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  btn: {\n    backgroundColor: PrimaryColor,\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: hoverColor,\n    },\n  },\n}));\n\nconst Entergroup = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [error, activegroup] = useSelector((state: RootState) => {\n    return [state.group.error, state.group.active_group];\n  });\n  const [input, setinput] = useState(\"\");\n\n  const callback = (err: any) => {\n    if (err) {\n    } else {\n      setinput(\"\");\n    }\n  };\n\n  const pressEnter = (e: any) => {\n    if (e.code === \"Enter\") {\n      dispatch(EnterGroup(props.groupname, input));\n    }\n  };\n\n  return (\n    <Modal\n      open={props.open.entergroup}\n      onClose={props.onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <>\n        <Container>\n          <FormContainer\n            onSubmit={(e) => {\n              e.preventDefault();\n              dispatch(EnterGroup(props.groupname, input));\n            }}\n          >\n            <h2>Enter Password</h2>\n            <TextField\n              fullWidth\n              error={error !== \"\"}\n              helperText={error}\n              autoFocus\n              className={classes.name}\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={input}\n              onChange={(e) => setinput(e.target.value)}\n              onFocus={(e) => {\n                dispatch(SetErrortoNull());\n              }}\n              onKeyPress={(e) => pressEnter(e)}\n            />\n            <ButtonGroup>\n              <Button\n                type=\"submit\"\n                onClick={() => dispatch(EnterGroup(props.groupname, input))}\n                className={classes.btn}\n              >\n                Enter\n              </Button>\n              <Button onClick={props.onClose} className={classes.btn}>\n                Cancel\n              </Button>\n            </ButtonGroup>\n          </FormContainer>\n        </Container>\n      </>\n    </Modal>\n  );\n};\n\nexport default Entergroup;\n","import React, { useState, useEffect } from \"react\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport Navbar from \"../navbar/navbar\";\nimport {\n  IconButton,\n  Paper,\n  Typography,\n  Button,\n  Tooltip,\n  Divider,\n} from \"@material-ui/core\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Addgroup from \"./addgroup\";\nimport Entergroup from \"./entergroup\";\nimport { RootState } from \"../../store/store\";\nimport {\n  FetchGroupsInfo,\n  FetchUserGroups,\n  DeleteGroup,\n} from \"../../store/reducers/group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst PrimaryColor = \"#002B6B\";\nconst SecendoryColor = \"#203E6B\";\nconst hoverColor = \"#294580\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    width: \"80%\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    padding: 20,\n    gap: \"20px\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    justifyContent: \"space-around\",\n    gap: \"10px\",\n    width: \"150px\",\n    height: \"150px\",\n  },\n  text: {\n    fontSize: \"17px\",\n    fontWeight: \"bolder\",\n    textAlign: \"center\",\n  },\n  btn: {\n    backgroundColor: PrimaryColor,\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: hoverColor,\n    },\n  },\n  loader: {\n    color: PrimaryColor,\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginTop: 20,\n  },\n  divider: {\n    display: \"flex\",\n    width: \"40%\",\n    justifyContent: \"center\",\n    margin: \"auto\",\n    marginTop: 5,\n    borderBottom: \"2px solid black\",\n    borderBottomColor: \"rgba(0, 0, 0, 0.12)\",\n  },\n  hr: {\n    width: \"80%\",\n    margin: \"auto\",\n    marginTop: 5,\n    borderBottom: \"2px solid black\",\n    borderBottomColor: \"rgba(0, 0, 0, 0.12)\",\n  },\n  nogroup: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginTop: 20,\n  },\n  abs: {\n    position: \"absolute\",\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n  tip: {\n    fontSize: \"20px\",\n    padding: \"10px\",\n    backgroundColor: PrimaryColor,\n  },\n  dltbtn: {\n    \"&:hover\": {\n      color: \"#cc5151\",\n    },\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [open, setOpen] = useState({\n    addgroup: false,\n    entergroup: false,\n  });\n  const [activegroup, setactivegroup] = useState(\"\");\n  const [token, userId, group_list, loading, active_group, active_user_groups] =\n    useSelector((state: RootState) => {\n      return [\n        state.auth.idtoken,\n        state.auth.userId,\n        state.group.group_list,\n        state.group.loading,\n        state.group.active_group,\n        state.group.active_user_groups,\n      ];\n    });\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token]);\n\n  useEffect(() => {\n    dispatch(FetchGroupsInfo());\n    dispatch(FetchUserGroups(userId));\n  }, []);\n\n\n  const handleOpen = (group: string, groupname: string) => {\n    if (groupname === active_group) {\n      history.push(\"/home/questions\");\n    } else {\n      setactivegroup(groupname);\n      setOpen((prevstate) => {\n        return { ...prevstate, [group]: true };\n      });\n    }\n  };\n\n  const handleClose = (group: string) => {\n    setOpen((prevstate) => {\n      return { ...prevstate, [group]: false };\n    });\n  };\n\n  const checkdisabled = (groupname: string) => {\n    let flag: boolean = true;\n    active_user_groups.map((group: string) => {\n      if (group === groupname) {\n        flag = false;\n      }\n    });\n    return flag;\n  };\n\n  return (\n    <>\n      <Tooltip\n        classes={{ tooltip: classes.tip }}\n        placement=\"left\"\n        title=\"Create Group\"\n        aria-label=\"add\"\n      >\n        <Fab\n          onClick={() => handleOpen(\"addgroup\", \"\")}\n          color=\"secondary\"\n          className={classes.abs}\n        >\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Addgroup open={open} onClose={() => handleClose(\"addgroup\")} />\n\n      <Navbar />\n      <div className={classes.heading}>Group List</div>\n      <Divider className={classes.divider} />\n      {loading ? (\n        <Container>\n          <CircularProgress className={classes.loader} />\n        </Container>\n      ) : (\n        <div className={classes.root}>\n          {group_list ? (\n            group_list.map((groupname: any) => {\n              return (\n                <Paper key={groupname} className={classes.paper} elevation={3}>\n                  <div>\n                    <div className={classes.text}>{groupname}</div>\n                    <Divider className={classes.hr} />\n                  </div>\n                  <div className={classes.flex}>\n                    <Button\n                      onClick={() => handleOpen(\"entergroup\", groupname)}\n                      color=\"secondary\"\n                      centerRipple={true}\n                      className={classes.btn}\n                    >\n                      Enter\n                    </Button>\n                    {active_user_groups ? (\n                      <IconButton\n                        disabled={checkdisabled(groupname)}\n                        className={classes.dltbtn}\n                        onClick={() => dispatch(DeleteGroup(groupname, userId))}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    ) : (\n                      <IconButton disabled={true} className={classes.dltbtn}>\n                        <DeleteIcon />\n                      </IconButton>\n                    )}\n                  </div>\n                </Paper>\n              );\n            })\n          ) : (\n            <div className={classes.nogroup}>No Groups Found</div>\n          )}\n          <Entergroup\n            groupname={activegroup}\n            open={open}\n            onClose={() => handleClose(\"entergroup\")}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/home/home\";\nimport Addques from \"./components/questions/newques\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"./store/store\";\nimport Login from \"./components/login/login\";\nimport Answers from \"./components/answers/answers\";\nimport HomePage from \"./components/homepage/homepage\";\nconst Routes = () => {\n  const token: any = useSelector((state: RootState) => state.auth.idtoken);\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/home\" component={HomePage} />\n      <Route exact path=\"/home/questions\" component={Home} />\n      <Route exact path=\"/home/addques\" component={Addques} />\n      <Route exact path=\"/home/answers\" component={Answers} />\n    </React.Fragment>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport firebase from \"./firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Routes from \"./routes\";\nimport { Logout } from \"./store/reducers/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        const email = user?.providerData[0].email;\n      }\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Routes />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import authReducer from \"./reducers/auth\";\nimport quesReducer from \"./reducers/question\";\nimport groupReducer from \"./reducers/group\";\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ques: quesReducer,\n  group: groupReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistor } from \"./store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"SolvitEasy\">\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}